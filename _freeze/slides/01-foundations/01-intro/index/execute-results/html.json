{
  "hash": "c8fce05a0c405a70c940822122ed4b7d",
  "result": {
    "markdown": "---\ntitle: Introduction to R and RStudio\nsubtitle: R foundations course\nauthor: Ella Kaye | Department of Statistics | University of Warwick\ntitle-slide-attributes:\n  data-background-color: \"#552D62\"\ndate: \"October 10th, 2022\"\nformat: \n  revealjs:\n    theme: [default, ../../slides.scss]\n    execute:\n      echo: true\n---\n\n\n## Overview\n\n-   Why use R?\n\n-   Use RStudio to write and run R programmes\n\n-   Create and start an R project\n\n-   Use `install.packages()` to install packages (libraries)\n\n-   How to get help in R\n\n-   See examples of data wrangling and visualisation\n\n# Why use R? {background-color=\"#552D62\"}\n\n## What can R do?\n\n-   Data import\n\n-   Data management and wrangling\n\n-   Exploratory data analysis\n\n-   Statistical modelling\n\n-   Advanced statistics\n\n-   Machine learning\n\n-   Data visualisation\n\n-   Reports, articles, dashboards, presentations, websites\n\n-   Integrates well with other languages\n\n-   Packages: share your code and use others\n\n## The R Ecosystem\n\n### Base R\n\n::: columns\n::: {.column width=\"50%\"}\n#### base\n\n-   create R objects\n-   summaries\n-   maths functions\n:::\n\n::: {.column width=\"50%\"}\n#### recommended\n\n-   statistics\n-   graphics\n-   example data\n:::\n:::\n\n## The R Ecosystem\n\n### Contributed packages\n\n::: columns\n::: {.column width=\"50%\"}\n#### CRAN\n\n-   Official R repository\n-   <https://cran.r-project.org>\n-   nearly 19000 packages\n:::\n\n::: {.column width=\"50%\"}\n#### bioconductor\n\n-   bioinformatics packages\n-   <https://www.bioconductor.org>\n-   \\~2100 packages\n:::\n:::\n\n#### GitHub\n\n-   packages in development\n-   GitHub-only packages\n\n## The tidyverse\n\nThe [tidyverse](https://www.tidyverse.org) is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar and data structures.\n\n![](/slides/01-foundations/images/tidyverse-packages.png){fig-align=\"center\"}\n\n## palmerpenguins\n\n-   [**palmerpenguins**](https://allisonhorst.github.io/palmerpenguins/) is a dataset package, designed to be a great example for data exploration and visualisation.\n\n-   It contains measurement data for 344 penguins, from three different species, collected from three islands in the Palmer Alchipelago, Antarctica.\n\n![](/slides/01-foundations/images/lter_penguins.png){fig-align=\"center\"}\n\n## The R community\n\nAnother reason to love R is the community around it. \n\nIt prides itself on being friendly, diverse, helpful, and supportive.\n\n- [R user groups](https://www.r-consortium.org/blog/2019/09/09/r-community-explorer-r-user-groups){target=\"_blank\"}\n\n- [R Ladies](https://rladies.org){target=\"_blank\"}\n\n- [RainbowR](https://rainbowr.netlify.app){target=\"_blank\"}\n\n- [MiR](https://mircommunity.com){target=\"_blank\"} (minorities in R)\n\n- [RStudio Community](https://community.rstudio.com){target=\"_blank\"}\n\n- [#RStats](https://twitter.com/hashtag/rstats){target=\"_blank\"} on twitter\n\n- [R for Data Science](https://www.rfordatasci.com){target=\"_blank\"} on twitter\n\n\n\n# Introducing RStudio {background-color=\"#552D62\"}\n\n## At first\n\n![](images/new-RStudio-project.png)\n\n## With script\n\n![](images/RStudio-project-with-script.png)\n\n## Best practice: use R projects\n\nAn RStudio project is a contect for working on a specific project\n\n-   keeps files well-organised\n\n-   automatically sets working directory to project root\n\n-   has separate workspace and command history\n\n-   works well with version control via git or svn\n\n## Getting started with projects\n\n-   Create a project from a new or existing directory via the file menu or new project button\n\n-   Switch project, or open a different project in a new RStudio instance via the project menu\n\n## RStudio project demo\n\n-   create r-foundations project\n\n-   create first script\n\n## Using the console\n\n-   for things that only need doing once, e.g. installing packages\n\n-   for doing things you don't need to track, e.g. requesting help files\n\n-   to quickly explore new ideas before adding them to a script\n\n## Using the console: shortcuts\n\nRStudio provides a few shortcuts to help write code in the R console\n\n-   <kbd title = \"up arrow\">↑</kbd>/<kbd title = \"down arrow\">↓</kbd> go back/forward through history one command at a time\n-   <kbd>Ctrl</kbd>/<kbd title = \"command\">⌘</kbd> + <kbd title = \"up arrow\">↑</kbd> review recent history and select command\n-   <kbd>Tab</kbd> view possible completions for part-written expression\n\nCode completion (using <kbd>Tab</kbd>) is also provided in the source editor\n\n## Using the console: demo\n\n``` r\n1 + 1\n?log\nlog(10)\nexp(-4 * 4 / 2) / sqrt(2 * pi)\ninstall.packages(\"tidyverse\")\ninstall.packages(\"palmerpenguins\")\n```\n\n## Using scripts\n\nText files saved with an .R suffix are recognised as R code\n\nCode can be sent directly from a script to the console as follows:\n\n-   <kbd>Ctrl</kbd>/<kbd title = \"command\">⌘</kbd> + <kbd title = \"enter\">↵</kbd> or <img src=\"images/run_button.png\" alt=\"Run button\" height=\"30px\" style=\"vertical-align: middle;\"/> run current line\n    -   run multiple lines by selecting first\n-   <kbd>Ctrl</kbd>/<kbd title = \"command\">⌘</kbd> + <kbd>Shift</kbd> + <kbd title = \"enter\">↵</kbd> or <img src=\"images/source_button.png\" alt=\"Source button\" height=\"30px\" style=\"vertical-align: middle;\"/>\n    -   Run the script from start to finish.\n\n## Why R scripts\n\nWriting an R script for an analysis has several advantages over a graphical user interface (GUI)\n\n-   it provides a record of the exact approach used in an analysis\n-   it enables the analysis to be easily reproduced and modified\n-   it allows greater control\n\n## Good practice for R Scripts\n\nOrganising your R script well will help you and others understand and use it.\n\n-   Add comment or two at start to describe purpose of script\n-   Load required data and packages at the start\n-   Avoid hard-coding: define variables such as file paths early on\n-   Give functions and variable meaningful names\n-   use `###` or `#---` to separate sections (in RStudio Code \\> Insert Section)\n\n## R script demo\n\n``` r\n### load libraries\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n### Inspect data\nView(penguins)\nglimpse(penguins)\nhead(penguins)\nsummary(penguins)\n```\n\n## Install and loading packages\n\n*In console*\n\n-   Install a package with `install.packages(\"package_name\")`\n\n-   Install multiple packages with `install.packages(c(\"package1\", \"package2\"))`\n\n-   or use install button in packages pane: ![](images/install_packages.png){width=\"150\"}\n\n*In script*\n\n-   Load packages with `library(package_name)`\n\n\n# Getting help in R {background-color=\"#552D62\"}\n\n## Within R - Help with functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# help with a specific function\nhelp(function_name)\n?function_name\n\n# quick reminder of the function arguments\narg(function_name)\n\n# see an example\nexample(function_name)\n\n# see the source code\nfunction_name\n```\n:::\n\n\n## Within R - `help.search`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# when ?function_name fails (e.g. don't have library loaded)\nhelp.search(\"function_name\") # note quotation marks\n??function_name\n\n# for when you can't quite remember the function name\n??something_like_function_name\n```\n:::\n\n\n## Within R - Help with package\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# `help`\nhelp(package = \"package_name\")\n# Help panel in RStudio will give links to all documentation\n# and help pages for that package\n\n# find/browse vignettes for installed (or specific) packages\nbrowseVignettes()\nbrowseVignettes(\"package_name\")\n\n# use auto-completion in RStudio to see what functions \n# are in a package\n?package::\n```\n:::\n\n\n`dplyr` demo\n\nRStudio Help home demo\n\n## Your turn\n\n-   create an R project called \"R-foundations\"\n\n-   install the packages **palmerpenguins** and **tidyverse**\n\n-   find the help page for the `penguins` dataset\n\n-   find the help page for the `filter` function in the `dplyr` package\n\n-   experiment typing commands into the console or in an R script.\n\nlink to [slides](https://warwick-stats-resources.github.io/R-training/slides/01-foundations/01-intro/#/title-slide){target=\"_blank\"}\n\n# What can we learn about penguins? {background-color=\"#552D62\"}\n\n## The data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema…  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema…  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema…  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema…  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# … with 334 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#   ²​body_mass_g\n```\n:::\n:::\n\n\n---\n\n#### How many of each species?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(penguins, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  species       n\n  <fct>     <int>\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n```\n:::\n:::\n\n\n---\n\n#### How many of each species on each island?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(penguins, species, island, .drop = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Biscoe        0\n5 Chinstrap Dream        68\n6 Chinstrap Torgersen     0\n7 Gentoo    Biscoe      124\n8 Gentoo    Dream         0\n9 Gentoo    Torgersen     0\n```\n:::\n:::\n\n\n---\n\n#### Show me the body masses of female Gentoo penguins with a bill length greater than 48mm\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  filter(sex == \"female\",\n         species == \"Gentoo\",\n         bill_length_mm > 48) |>\n  select(body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 1\n  body_mass_g\n        <int>\n1        4450\n2        4600\n3        5150\n4        4625\n5        4625\n6        4850\n7        5000\n```\n:::\n:::\n\n\n`|>` is the pipe. It passes what comes before into the first argument of what comes after.\n\nPipes are a powerful tool for clearly expressing a sequence of multiple operations. \n\n--- \n\n#### What's the mean bill length, by species?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |>\n  group_by(species) |>\n  summarise(mean_bill_length = mean(bill_length_mm, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  species   mean_bill_length\n  <fct>                <dbl>\n1 Adelie                38.8\n2 Chinstrap             48.8\n3 Gentoo                47.5\n```\n:::\n:::\n\n\n--- \n\n#### What's the relationship between bill length and depth?\n\n::: {.panel-tabset}\n### picture\n\n![](images/culmen_depth.png){width=50%}\n\n### plot 1\n![](index_files/figure-revealjs/bill-no-species-1.png){width=80%}\n\n### code 1\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"gray50\") +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\") +\n  theme_minimal() + \n  theme(plot.title.position = \"plot\")\n```\n:::\n\n\n### plot 2\n![](index_files/figure-revealjs/bill-species-1.png){width=80%}\n\n### code 2\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme_minimal() +\n  theme(legend.position = c(0.85, 0.15),\n        plot.title.position = \"plot\")\n```\n:::\n\n\n### what?!\n\nThis is an illustration of [Simpson's Paradox](https://en.wikipedia.org/wiki/Simpson's_paradox){target=\"__blank\"}.\n\n> Simpson's paradox is a phenomenon in probability and statistics in which a trend appears in several groups of data but disappears or reverses when the groups are combined. \n\n:::\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}