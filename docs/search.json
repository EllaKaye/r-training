[
  {
    "objectID": "schedule/03-packages.html",
    "href": "schedule/03-packages.html",
    "title": "R Packages Course",
    "section": "",
    "text": "Schedule for Term 3 (likely to change because of the three bank holidays).\nClick on the topic to be taken to the page with its slides and resources (will be updated throughout the term).\n\n\n\nWeek\nDate (2023)\nTopic\n\n\n\n\nWeek 2\nMay 1st\nCreating a simple package\n\n\nWeek 3\nMay 8th\nFunction documentation and dependencies\n\n\nWeek 4\nMay 15th\nBreak/online clinic\n\n\nWeek 5\nMay 22nd\nPackage-level documentation and check\n\n\nWeek 6\nMay 29th\nData and unit testing\n\n\nWeek 7\nJune 5th\nBreak/online clinic\n\n\nWeek 8\nJune 12th\nC++\n\n\nWeek 9\nJune 19th\nPublication and maintenance\n\n\nWeek 10\nJune 26th\nBreak/online clinic"
  },
  {
    "objectID": "schedule/01-foundations.html",
    "href": "schedule/01-foundations.html",
    "title": "R Foundations Course",
    "section": "",
    "text": "Schedule for Term 1 (subject to change).\nClick on the topic to be taken to the page with its slides and resources (will be updated throughout the term).\n\n\n\nWeek\nDate (2022)\nTopic\n\n\n\n\nWeek 2\nOctober 10th\nIntro to R and RStudio\n\n\nWeek 3\nOctober 17th\nData Wrangling\n\n\nWeek 4\nOctober 24th\nBreak/online clinic\n\n\nWeek 5\nOctober 31st\nProgramming in R\n\n\nWeek 6\nNovember 7th\nSimulation and Optimisation\n\n\nWeek 7\nNovember 14th\nBreak/online clinic\n\n\nWeek 8\nNovember 21st\nGraphics\n\n\nWeek 9\nNovember 28th\nQuarto reporting and presentations\n\n\nWeek 10\nDecember 5th\nBreak/online clinic"
  },
  {
    "objectID": "schedule/02-advanced.html",
    "href": "schedule/02-advanced.html",
    "title": "Advanced R Course",
    "section": "",
    "text": "Schedule for Term 2.\nClick on the topic to be taken to the page with its slides and resources (will be updated throughout the term).\nAdd the Advanced R Course to your calendar (this link does not work in Safari, Internet Explorer, or Opera Mini)\n\n\n\nWeek\nDate (2023)\nTopic\n\n\n\n\nWeek 2\nJanuary 16th\ngit and GitHub\n\n\nWeek 3\nJanuary 23rd\nFunctions\n\n\nWeek 4\nJanuary 30th\nBreak/online clinic\n\n\nWeek 5\nFebruary 6th\nMemory and Parallelisation\n\n\nWeek 6\nFebruary 13th\nProfiling\n\n\nWeek 7\nFebruary 20th\nBreak/online clinic\n\n\nWeek 8\nFebruary 27th\nC++ and Rcpp\n\n\nWeek 9\nMarch 6th\nClasses and Methods\n\n\nWeek 10\nMarch 13th\nBreak/online clinic"
  },
  {
    "objectID": "content.html",
    "href": "content.html",
    "title": "Content",
    "section": "",
    "text": "Please use the links in the sidebar to navigate to the page for each session."
  },
  {
    "objectID": "join.html",
    "href": "join.html",
    "title": "Join the class",
    "section": "",
    "text": "For Term 2, the Advanced R Course will take place on Microsoft Teams most Mondays from 9:30-11am. Please see the schedule for the week-by-week outline.\nPlease note that you must be a member of the University of Warwick to attend these classes, so you must be signed into Teams with your university account to join.\nAdd the Advanced R Course to your calendar (this link does not work in Safari, Internet Explorer, or Opera Mini)"
  },
  {
    "objectID": "join.html#microsoft-teams-meeting",
    "href": "join.html#microsoft-teams-meeting",
    "title": "Join the class",
    "section": "Microsoft Teams meeting",
    "text": "Microsoft Teams meeting\nJoin on your computer, mobile app or room device\nClick here to join the meeting\nJoin on the web\nMeeting ID: 343 657 378 859\nPasscode: zdDgPe\nOr call in (audio only)\n+44 20 3443 8791,,396666912# United Kingdom, London Phone Conference ID: 396 666 912#"
  },
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Getting set up",
    "section": "",
    "text": "Please ensure that you have the latest versions of R and RStudio installed prior to the first session. Currently, that’s R-4.2.1 and RStudio-2022.07.2.\nWe also strongly recommend you install the development tools to avoid potential issues installing packages.\n\nInstalling R\nDownload the pre-compiled binary for your OS from https://cloud.r-project.org/ and install. More specifically:\nFor Windows\nClick “Download R for Windows”, then “base”, then “Download R-4.2.1 for Windows”. This will download an .exe file; once downloaded, open to start the installation.\nFor Mac\nClick “Download R for macOS”, then “R-4.2.1.pkg” (the first option) to download the installer for Macs with Intel chips or “R-4.2.1-arm64.pkg” (the second option) to download the installer for Macs with Apple Silicon chips. Run the installer to complete installation.\nFor Linux\nClick “Download R for Linux”. Instructions on installing are given for Debian, Fedora, Redhat, Suse and Ubuntu distributions. Where there is a choice, install both r-base and r-base-dev.\n\n\nInstalling R Studio Desktop (Open Source Edition)\nDownloads are available from https://www.rstudio.com/products/rstudio/download/#download\nFor Windows with no admin rights\nDownload the .zip source archive under “Zip/Tarballs”. Extract the files to a folder where you have write access, e.g. C:\\Users\\username\\RStudio. In this folder, open the bin directory and find the RStudio program: it is named rstudio.exe, but the file extension will typically be hidden, so look for rstudio. Right-click this executable to create a desktop shortcut. Double-click the executable or use the shortcut to open.\nFor all other operating systems\nDownload the relevant installer for your OS listed under “Installers for Supported Platforms”. Run the installer to complete installation.\n\n\nDevelopment Tools\nSome additional tools may be required to compile R packages from source.\nFor Windows with no admin rights\nDownload the latest (recommended) Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/. Run the installer keeping the default settings.\nFor Windows with admin rights\nDownload the latest Rtools installer, Rtools.exe, from https://cran.r-project.org/bin/windows/Rtools/. Run the installer making the following selections: keep the default settings for the installation location and components to install; check the box to add rtools to the system PATH.\nFor Mac\nInstall XCode. Either:\n\nDownload and install XCode from the Mac AppStore: http://itunes.apple.com/us/app/xcode/id497799835?mt=12\nWithin XCode go to Preferences : Downloads and install the Command Line Tools\n\nOr for a smaller download size:\n\nRegister as an Apple Developer (free) here: https://developer.apple.com/programs/register/\nDownload the Command Line Tools for XCode appropriate for the version of OS X you are running from here: https://developer.apple.com/downloads/\n\nFor Linux\nIf you installed r-base-dev, when installing R, you should have all you need to build packages from source. Otherwise return to the instructions for installing R for your distribution and follow the instructions there to install the additional tools.\n\n\nTerms 2 and 3\nThis page will be updated with prerequisites for terms 2 and 3 in due course."
  },
  {
    "objectID": "content/03-packages/01-simple-package.html",
    "href": "content/03-packages/01-simple-package.html",
    "title": "Creating a Simple Package",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/03-packages/01-simple-package.html#slides",
    "href": "content/03-packages/01-simple-package.html#slides",
    "title": "Creating a Simple Package",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/01-simple-package.html#resources",
    "href": "content/03-packages/01-simple-package.html#resources",
    "title": "Creating a Simple Package",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/03-packages/03-package-docs.html",
    "href": "content/03-packages/03-package-docs.html",
    "title": "Package-Level Documentation and Checks",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/03-packages/03-package-docs.html#slides",
    "href": "content/03-packages/03-package-docs.html#slides",
    "title": "Package-Level Documentation and Checks",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/03-package-docs.html#resources",
    "href": "content/03-packages/03-package-docs.html#resources",
    "title": "Package-Level Documentation and Checks",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/03-packages/05-C++.html",
    "href": "content/03-packages/05-C++.html",
    "title": "C++",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/03-packages/05-C++.html#slides",
    "href": "content/03-packages/05-C++.html#slides",
    "title": "C++",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/05-C++.html#resources",
    "href": "content/03-packages/05-C++.html#resources",
    "title": "C++",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/03-packages/00-template.html",
    "href": "content/03-packages/00-template.html",
    "title": "TITLE",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/03-packages/00-template.html#todo",
    "href": "content/03-packages/00-template.html#todo",
    "title": "TITLE",
    "section": "TODO",
    "text": "TODO\n\nLink to this page in schedule\nLink to this page in _quarto.yml\nUpdate TITLE\nCreate folder for slides\nUpdate link to slides in new window\nUpdate link to slides in iframe\nUpdate title of slides in iframe\nFill in resources"
  },
  {
    "objectID": "content/03-packages/00-template.html#slides",
    "href": "content/03-packages/00-template.html#slides",
    "title": "TITLE",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/00-template.html#resources",
    "href": "content/03-packages/00-template.html#resources",
    "title": "TITLE",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/03-packages/06-publication.html",
    "href": "content/03-packages/06-publication.html",
    "title": "Publication and Maintenance",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/03-packages/06-publication.html#slides",
    "href": "content/03-packages/06-publication.html#slides",
    "title": "Publication and Maintenance",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/06-publication.html#resources",
    "href": "content/03-packages/06-publication.html#resources",
    "title": "Publication and Maintenance",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/03-packages/02-function-docs.html",
    "href": "content/03-packages/02-function-docs.html",
    "title": "Function Documentation and Dependencies",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/03-packages/02-function-docs.html#slides",
    "href": "content/03-packages/02-function-docs.html#slides",
    "title": "Function Documentation and Dependencies",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/02-function-docs.html#resources",
    "href": "content/03-packages/02-function-docs.html#resources",
    "title": "Function Documentation and Dependencies",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/03-packages/04-testing.html",
    "href": "content/03-packages/04-testing.html",
    "title": "Data and Unit Testing",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/03-packages/04-testing.html#resources",
    "href": "content/03-packages/04-testing.html#resources",
    "title": "Data and Unit Testing",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/01-foundations/06-quarto.html",
    "href": "content/01-foundations/06-quarto.html",
    "title": "Quarto",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/01-foundations/06-quarto.html#slides",
    "href": "content/01-foundations/06-quarto.html#slides",
    "title": "Quarto",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/06-quarto.html#resources",
    "href": "content/01-foundations/06-quarto.html#resources",
    "title": "Quarto",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/01-foundations/01-intro.html",
    "href": "content/01-foundations/01-intro.html",
    "title": "Introduction to R and RStudio",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/01-intro.html#resources",
    "href": "content/01-foundations/01-intro.html#resources",
    "title": "Introduction to R and RStudio",
    "section": "Resources",
    "text": "Resources\n\nR and RStudio\n\nRStudio IDE cheatsheet (11th one down)\nhttps://www.rstudio.com/resources/cheatsheets/\nBeginner resourses from the RStudio Education team\nhttps://education.rstudio.com/learn/beginner/\nIntroduction to R and RStudio from the Carpentries\nhttps://carpentries-incubator.github.io/r-tidyverse-4-datasets/01-project-introduction.html\n\n\n\nPackages\n\nTidyverse\nhttps://www.tidyverse.org\npalmerpenguins\nhttps://allisonhorst.github.io/palmerpenguins/index.html"
  },
  {
    "objectID": "content/01-foundations/04-sim-optim.html",
    "href": "content/01-foundations/04-sim-optim.html",
    "title": "Simulation and Optimisation",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/00-template.html",
    "href": "content/01-foundations/00-template.html",
    "title": "TITLE",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/01-foundations/00-template.html#todo",
    "href": "content/01-foundations/00-template.html#todo",
    "title": "TITLE",
    "section": "TODO",
    "text": "TODO\n\nLink to this page in schedule\nLink to this page in _quarto.yml\nUpdate TITLE\nCreate folder for slides\nUpdate link to slides in new window\nUpdate link to slides in iframe\nUpdate title of slides in iframe\nFill in resources"
  },
  {
    "objectID": "content/01-foundations/00-template.html#slides",
    "href": "content/01-foundations/00-template.html#slides",
    "title": "TITLE",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/00-template.html#resources",
    "href": "content/01-foundations/00-template.html#resources",
    "title": "TITLE",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/01-foundations/02-data-wrangling.html",
    "href": "content/01-foundations/02-data-wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/02-data-wrangling.html#resources",
    "href": "content/01-foundations/02-data-wrangling.html#resources",
    "title": "Data Wrangling",
    "section": "Resources",
    "text": "Resources\n\nR and RStudio\n\nRStudio cheatsheets\nR for data science book\n\n\n\nPackages\n\ndplyr\nhttps://dplyr.tidyverse.org\nforcats\nhttps://forcats.tidyverse.org\nferriswheels\nhttps://github.com/EmilHvitfeldt/ferriswheels\nhere\nhttps://here.r-lib.org"
  },
  {
    "objectID": "content/01-foundations/05-graphics.html",
    "href": "content/01-foundations/05-graphics.html",
    "title": "Graphics",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/05-graphics.html#resources",
    "href": "content/01-foundations/05-graphics.html#resources",
    "title": "Graphics",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nggplot2: Elegant Graphics for Data Analysis\nhttps://ggplot2-book.org\n\n\n\nPackages\n\nggplot2\nhttps://ggplot2.tidyverse.org"
  },
  {
    "objectID": "content/01-foundations/03-programming.html",
    "href": "content/01-foundations/03-programming.html",
    "title": "Programming in R",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/01-foundations/03-programming.html#resources",
    "href": "content/01-foundations/03-programming.html#resources",
    "title": "Programming in R",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nEfficient Programming, from Efficient R by Colin Gillespie and Robin Lovelace\nhttps://csgillespie.github.io/efficientR/programming.html\nChapters on functions and iteration, from R for Data Science by Hadley Wickham and Garrett Grolemund\nhttps://r4ds.had.co.nz/index.html\nhttps://r4ds.had.co.nz/functions.html\nhttps://r4ds.had.co.nz/iteration.html"
  },
  {
    "objectID": "content/02-advanced/06-classes-methods.html",
    "href": "content/02-advanced/06-classes-methods.html",
    "title": "Classes and Methods",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/02-advanced/06-classes-methods.html#slides",
    "href": "content/02-advanced/06-classes-methods.html#slides",
    "title": "Classes and Methods",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/06-classes-methods.html#resources",
    "href": "content/02-advanced/06-classes-methods.html#resources",
    "title": "Classes and Methods",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/02-advanced/02-functions.html",
    "href": "content/02-advanced/02-functions.html",
    "title": "Functions",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/02-advanced/02-functions.html#slides",
    "href": "content/02-advanced/02-functions.html#slides",
    "title": "Functions",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/02-functions.html#resources",
    "href": "content/02-advanced/02-functions.html#resources",
    "title": "Functions",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/02-advanced/01-git.html",
    "href": "content/02-advanced/01-git.html",
    "title": "git and GitHub",
    "section": "",
    "text": "Here’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/01-git.html#slides",
    "href": "content/02-advanced/01-git.html#slides",
    "title": "git and GitHub",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/01-git.html#resources",
    "href": "content/02-advanced/01-git.html#resources",
    "title": "git and GitHub",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nHappy Git and GitHub for the useR by Jenny Bryan\nhttp://happygitwithr.com\nGitHub for supporting, reusing, contributing and failing safely by Allison Horst and Julie Lowndes\nhttps://www.openscapes.org/blog/2022/05/27/github-illustrated-series/\nVersion control: A practical introduction to Git and GitHub\nhttps://www.jvcasillas.com/github_workshop/index.html#1\n\n\n\nPackages\n\nusethis\ngert"
  },
  {
    "objectID": "content/02-advanced/05-C++.html",
    "href": "content/02-advanced/05-C++.html",
    "title": "C++ and Rcpp",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/02-advanced/05-C++.html#slides",
    "href": "content/02-advanced/05-C++.html#slides",
    "title": "C++ and Rcpp",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/05-C++.html#resources",
    "href": "content/02-advanced/05-C++.html#resources",
    "title": "C++ and Rcpp",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/02-advanced/00-template.html",
    "href": "content/02-advanced/00-template.html",
    "title": "TITLE",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/02-advanced/00-template.html#todo",
    "href": "content/02-advanced/00-template.html#todo",
    "title": "TITLE",
    "section": "TODO",
    "text": "TODO\n\nLink to this page in schedule\nLink to this page in _quarto.yml\nUpdate TITLE\nCreate folder for slides\nUpdate link to slides in new window\nUpdate link to slides in iframe\nUpdate title of slides in iframe\nFill in resources"
  },
  {
    "objectID": "content/02-advanced/00-template.html#slides",
    "href": "content/02-advanced/00-template.html#slides",
    "title": "TITLE",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/00-template.html#resources",
    "href": "content/02-advanced/00-template.html#resources",
    "title": "TITLE",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/02-advanced/03-memory-parallel.html",
    "href": "content/02-advanced/03-memory-parallel.html",
    "title": "Memory and Parallelisation",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/02-advanced/03-memory-parallel.html#slides",
    "href": "content/02-advanced/03-memory-parallel.html#slides",
    "title": "Memory and Parallelisation",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/03-memory-parallel.html#resources",
    "href": "content/02-advanced/03-memory-parallel.html#resources",
    "title": "Memory and Parallelisation",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "content/02-advanced/04-profiling.html",
    "href": "content/02-advanced/04-profiling.html",
    "title": "Profiling",
    "section": "",
    "text": "This page and the slides for this session are still under development"
  },
  {
    "objectID": "content/02-advanced/04-profiling.html#slides",
    "href": "content/02-advanced/04-profiling.html#slides",
    "title": "Profiling",
    "section": "Slides",
    "text": "Slides\nHere’s a link to the slides in a new window.\nHere are the slides embedded:"
  },
  {
    "objectID": "content/02-advanced/04-profiling.html#resources",
    "href": "content/02-advanced/04-profiling.html#resources",
    "title": "Profiling",
    "section": "Resources",
    "text": "Resources\n\nReading\n\nTITLE\n\n\n\n\nPackages"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Training",
    "section": "",
    "text": "Welcome to the  training course!\nThis course is aimed primarily at PhD students and early career researchers in the Department of Statistics at the University of Warwick. Other members of the Department of Statistics are also welcome.\nPlease see the join page for more details on how to attend the course."
  },
  {
    "objectID": "index.html#syllabus-overview",
    "href": "index.html#syllabus-overview",
    "title": "R Training",
    "section": "Syllabus overview",
    "text": "Syllabus overview\n\nTerm 1: R Foundations, to cover the information and skills necessary to enable successful completion of the APTS programme and equip you to use R for standard analysis and reporting.\nTerm 2: Advanced R, to develop your R programming skills and equip you to write custom code for simulations, new statistical methods, etc.\nTerm 3: R package development, to equip you to share code with others, following good research software engineering practices.\n\nAll slides and further resources can be accessed from the content page and also via the schedule. Material will be added as the year progresses. There is one page per session."
  },
  {
    "objectID": "index.html#session-details",
    "href": "index.html#session-details",
    "title": "R Training",
    "section": "Session details",
    "text": "Session details\n   Most Mondays in term time\n   9:30-11:00 (Term 2)\n   Microsoft Teams (invitations will be sent to the primarily intended participants, but see also the join if you’re a member of the Department of Statistics at the University of Warwick and you wish to attend).\n   See the full schedule."
  },
  {
    "objectID": "index.html#instructor-details",
    "href": "index.html#instructor-details",
    "title": "R Training",
    "section": "Instructor details",
    "text": "Instructor details\n   Ella Kaye\n   Ella.M.Kaye@warwick.ac.uk"
  },
  {
    "objectID": "index.html#prerequistes",
    "href": "index.html#prerequistes",
    "title": "R Training",
    "section": "Prerequistes",
    "text": "Prerequistes\nPlease see the prerequisites page for details on getting set up in advance of the first session."
  },
  {
    "objectID": "slides/03-packages/00-template/index.html#overview",
    "href": "slides/03-packages/00-template/index.html#overview",
    "title": "TITLE",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/00-template/index.html#resources",
    "href": "slides/03-packages/00-template/index.html#resources",
    "title": "TITLE",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/00-template/index.html#license",
    "href": "slides/03-packages/00-template/index.html#license",
    "title": "TITLE",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-packages/06-publication/index.html#overview",
    "href": "slides/03-packages/06-publication/index.html#overview",
    "title": "Publication and Maintenance",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/06-publication/index.html#resources",
    "href": "slides/03-packages/06-publication/index.html#resources",
    "title": "Publication and Maintenance",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/06-publication/index.html#license",
    "href": "slides/03-packages/06-publication/index.html#license",
    "title": "Publication and Maintenance",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-packages/04-testing/index.html#overview",
    "href": "slides/03-packages/04-testing/index.html#overview",
    "title": "Data and Unit Testing",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/04-testing/index.html#resources",
    "href": "slides/03-packages/04-testing/index.html#resources",
    "title": "Data and Unit Testing",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/04-testing/index.html#license",
    "href": "slides/03-packages/04-testing/index.html#license",
    "title": "Data and Unit Testing",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-packages/03-package-docs/index.html#overview",
    "href": "slides/03-packages/03-package-docs/index.html#overview",
    "title": "Package-Level Documentation and Check",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/03-package-docs/index.html#resources",
    "href": "slides/03-packages/03-package-docs/index.html#resources",
    "title": "Package-Level Documentation and Check",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/03-package-docs/index.html#license",
    "href": "slides/03-packages/03-package-docs/index.html#license",
    "title": "Package-Level Documentation and Check",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-packages/02-function-docs/index.html#overview",
    "href": "slides/03-packages/02-function-docs/index.html#overview",
    "title": "Function Documentation and Dependencies",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/02-function-docs/index.html#resources",
    "href": "slides/03-packages/02-function-docs/index.html#resources",
    "title": "Function Documentation and Dependencies",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/02-function-docs/index.html#license",
    "href": "slides/03-packages/02-function-docs/index.html#license",
    "title": "Function Documentation and Dependencies",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-packages/01-simple-package/index.html#overview",
    "href": "slides/03-packages/01-simple-package/index.html#overview",
    "title": "Creating a Simple Package",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/01-simple-package/index.html#resources",
    "href": "slides/03-packages/01-simple-package/index.html#resources",
    "title": "Creating a Simple Package",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/01-simple-package/index.html#license",
    "href": "slides/03-packages/01-simple-package/index.html#license",
    "title": "Creating a Simple Package",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/03-packages/05-C++/index.html#overview",
    "href": "slides/03-packages/05-C++/index.html#overview",
    "title": "C++",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/03-packages/05-C++/index.html#resources",
    "href": "slides/03-packages/05-C++/index.html#resources",
    "title": "C++",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/03-packages/05-C++/index.html#license",
    "href": "slides/03-packages/05-C++/index.html#license",
    "title": "C++",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/00-template/index.html#overview",
    "href": "slides/01-foundations/00-template/index.html#overview",
    "title": "TITLE",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/01-foundations/00-template/index.html#resources",
    "href": "slides/01-foundations/00-template/index.html#resources",
    "title": "TITLE",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/01-foundations/00-template/index.html#license",
    "href": "slides/01-foundations/00-template/index.html#license",
    "title": "TITLE",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#overview",
    "href": "slides/01-foundations/05-graphics/index.html#overview",
    "title": "Graphics",
    "section": "Overview",
    "text": "Overview\n\nPlots in base R\nggplot2\nTables"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#libraries",
    "href": "slides/01-foundations/05-graphics/index.html#libraries",
    "title": "Graphics",
    "section": "libraries",
    "text": "libraries\n\nlibrary(ggplot2) # for later in the session\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#no-frills",
    "href": "slides/01-foundations/05-graphics/index.html#no-frills",
    "title": "Graphics",
    "section": "No frills",
    "text": "No frills\nBase R graphics are useful for quick, exploratory “no-frills” plots.\n(For anything better looking or more complex or where you want more control, use ggplot2)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#boxplots",
    "href": "slides/01-foundations/05-graphics/index.html#boxplots",
    "title": "Graphics",
    "section": "Boxplots",
    "text": "Boxplots\n\nExample 1Example 2\n\n\n\nboxplot(penguins$body_mass_g)\n\n\n\n\n\n\n\nwith(penguins, boxplot(body_mass_g ~ species))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#histogramdensity",
    "href": "slides/01-foundations/05-graphics/index.html#histogramdensity",
    "title": "Graphics",
    "section": "Histogram/Density",
    "text": "Histogram/Density\n\nHistogramDensity\n\n\n\nhist(penguins$body_mass_g)\n\n\n\n\n\n\n\nplot(density(penguins$body_mass_g, na.rm = TRUE))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#scatterplots",
    "href": "slides/01-foundations/05-graphics/index.html#scatterplots",
    "title": "Graphics",
    "section": "Scatterplots",
    "text": "Scatterplots\n\nVectorsData frame\n\n\n\nplot(1:10, 1:10)\n\n\n\n\n\n\n\nplot(bill_length_mm ~ bill_depth_mm, \n     data = penguins)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#plot-methods",
    "href": "slides/01-foundations/05-graphics/index.html#plot-methods",
    "title": "Graphics",
    "section": "Plot methods",
    "text": "Plot methods\nMany different objects in R have defined plot methods:\n\nmethods(plot)\n\n [1] plot,ANY-method     plot,color-method   plot.acf*          \n [4] plot.data.frame*    plot.decomposed.ts* plot.default       \n [7] plot.dendrogram*    plot.density*       plot.ecdf          \n[10] plot.factor*        plot.formula*       plot.function      \n[13] plot.ggplot*        plot.gtable*        plot.hcl_palettes* \n[16] plot.hclust*        plot.histogram*     plot.HoltWinters*  \n[19] plot.isoreg*        plot.lm*            plot.medpolish*    \n[22] plot.mlm*           plot.ppr*           plot.prcomp*       \n[25] plot.princomp*      plot.profile.nls*   plot.R6*           \n[28] plot.raster*        plot.spec*          plot.stepfun       \n[31] plot.stl*           plot.table*         plot.trans*        \n[34] plot.ts             plot.tskernel*      plot.TukeyHSD*     \nsee '?methods' for accessing help and source code\n\n\ne.g. if you call plot on an object of type lm, it will call plot.lm"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#linear-model-diagnostic-fits",
    "href": "slides/01-foundations/05-graphics/index.html#linear-model-diagnostic-fits",
    "title": "Graphics",
    "section": "Linear model diagnostic fits",
    "text": "Linear model diagnostic fits\n\nfit <- lm(bill_length_mm ~ bill_depth_mm, \n          data = penguins, subset = species == \"Gentoo\")\n\npar(mfrow=c(2,2)) # see all four plots together\nplot(fit)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#your-turn",
    "href": "slides/01-foundations/05-graphics/index.html#your-turn",
    "title": "Graphics",
    "section": "Your turn!",
    "text": "Your turn!\nFrom the starting point of plot(1:10, 1:10), experiment with the arguments type and pch. See ?plot\nCan you create a plot with triangular points linked by lines?\nCan you do the same with the lines() function? What are the similarities and differences?"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#intro-to-ggplot2",
    "href": "slides/01-foundations/05-graphics/index.html#intro-to-ggplot2",
    "title": "Graphics",
    "section": "Intro to ggplot2",
    "text": "Intro to ggplot2\nFrom https://ggplot2.tidyverse.org:\n\nR has several systems for making graphs, but ggplot2 is one of the most elegant and most versatile. ggplot2 implements the grammar of graphics, a coherent system for describing and building graphs. With ggplot2, you can do more faster by learning one system and applying it in many places.\n\nFrom https://r4ds.had.co.nz/data-visualisation.html:\n\nYou provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#ggplot2-usage",
    "href": "slides/01-foundations/05-graphics/index.html#ggplot2-usage",
    "title": "Graphics",
    "section": "ggplot2 usage",
    "text": "ggplot2 usage\n\nggplot2 is part of the tidyverse.\nIt has been around for over 10 years and is used by hundreds of thousands of people.\nIt can take some getting used to, but is worth the investment to learn properly"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#ggplot2-key-components",
    "href": "slides/01-foundations/05-graphics/index.html#ggplot2-key-components",
    "title": "Graphics",
    "section": "ggplot2 key components",
    "text": "ggplot2 key components\nEvery ggplot2 plot has three key components:\n\nData (typically in a data frame),\nA set of aesthetic mappings between variables in the data and visual properties, and\nAt least one layer which describes how to render each observation. Layers are usually created with a geom function."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#cake",
    "href": "slides/01-foundations/05-graphics/index.html#cake",
    "title": "Graphics",
    "section": "Cake!",
    "text": "Cake!\n\nImage credit: Tanya Shapiro"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#initiate-with-data",
    "href": "slides/01-foundations/05-graphics/index.html#initiate-with-data",
    "title": "Graphics",
    "section": "Initiate with data",
    "text": "Initiate with data\nPackage is ggplot2 but function is ggplot()\n\nggplot(penguins)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#add-aesthetics",
    "href": "slides/01-foundations/05-graphics/index.html#add-aesthetics",
    "title": "Graphics",
    "section": "Add aesthetics",
    "text": "Add aesthetics\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#add-points",
    "href": "slides/01-foundations/05-graphics/index.html#add-points",
    "title": "Graphics",
    "section": "Add points",
    "text": "Add points\nLayers are added with + (not %>% or |>)\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point()"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#careful-what-goes-in-aes",
    "href": "slides/01-foundations/05-graphics/index.html#careful-what-goes-in-aes",
    "title": "Graphics",
    "section": "Careful what goes in aes()",
    "text": "Careful what goes in aes()\n\n\n\nggplot(penguins, \n       aes(x = bill_length_mm, \n           y = bill_depth_mm)) +\n  geom_point(aes(color = \"blue\"))\n\n\n\n\n\n\nggplot(penguins, \n       aes(x = bill_length_mm, \n           y = bill_depth_mm)) +\n  geom_point(color = \"blue\")"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#when-you-do-want-to-map-a-colour-to-data",
    "href": "slides/01-foundations/05-graphics/index.html#when-you-do-want-to-map-a-colour-to-data",
    "title": "Graphics",
    "section": "When you do want to map a colour to data",
    "text": "When you do want to map a colour to data\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8)\n\nNote that color and shape are inside aes() but size and alpha are outside."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#add-additional-geoms",
    "href": "slides/01-foundations/05-graphics/index.html#add-additional-geoms",
    "title": "Graphics",
    "section": "Add additional geoms",
    "text": "Add additional geoms\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#scales-in-ggplot2",
    "href": "slides/01-foundations/05-graphics/index.html#scales-in-ggplot2",
    "title": "Graphics",
    "section": "Scales in ggplot2",
    "text": "Scales in ggplot2\n\nScales in ggplot2 control the mapping from data to aesthetics. They take your data and turn it into something that you can see, like size, colour, position or shape. They also provide the tools that let you interpret the plot: the axes and legends.\n\nThree groups of scales:\n\nposition scales and axes\ncolour scales and legends\nscales for other aesthetics"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#add-a-colour-scale",
    "href": "slides/01-foundations/05-graphics/index.html#add-a-colour-scale",
    "title": "Graphics",
    "section": "Add a colour scale",
    "text": "Add a colour scale\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\"))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#facets",
    "href": "slides/01-foundations/05-graphics/index.html#facets",
    "title": "Graphics",
    "section": "Facets",
    "text": "Facets\n\nplot 1code 1plot 2code 2\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  facet_wrap(~species)\n\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  facet_wrap(~species, scales = \"free_x\")"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#add-theme-elements",
    "href": "slides/01-foundations/05-graphics/index.html#add-theme-elements",
    "title": "Graphics",
    "section": "Add theme elements",
    "text": "Add theme elements\n\nplotcode\n\n\n\n\n\n\nggplot(data = penguins,\n       aes(x = bill_length_mm,\n           y = bill_depth_mm,\n           group = species)) +\n  geom_point(aes(color = species, \n                 shape = species),\n             size = 3,\n             alpha = 0.8) +\n  geom_smooth(method = \"lm\", aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin bill dimensions\",\n       x = \"bill length (mm)\",\n       y = \"bill depth (mm)\") +\n  theme_minimal() + \n  theme(plot.title.position = \"plot\",\n        text = element_text(size = 20))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#your-turn-1",
    "href": "slides/01-foundations/05-graphics/index.html#your-turn-1",
    "title": "Graphics",
    "section": "Your turn!",
    "text": "Your turn!\nRecreate the base R plots from the first part of this session in ggplot2.\nYou may find the list of available geoms (and there help pages) useful:\nhttps://ggplot2.tidyverse.org/reference/index.html#layers"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#boxplot-1",
    "href": "slides/01-foundations/05-graphics/index.html#boxplot-1",
    "title": "Graphics",
    "section": "Boxplot 1",
    "text": "Boxplot 1\n\nggplot(penguins) +\n  geom_boxplot(aes(y = body_mass_g))\n\n\nNotes\n\naes() can be defined for the whole plot or in the geom\nfirst arguments to aes() are x and y (don’t need to name them if using them in that order)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#boxplot-2",
    "href": "slides/01-foundations/05-graphics/index.html#boxplot-2",
    "title": "Graphics",
    "section": "Boxplot 2",
    "text": "Boxplot 2\n\nggplot(penguins) +\n  geom_boxplot(aes(species, body_mass_g))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#histogram-1",
    "href": "slides/01-foundations/05-graphics/index.html#histogram-1",
    "title": "Graphics",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(penguins) +\n  geom_histogram(aes(body_mass_g), \n                 binwidth = 500)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#density-1",
    "href": "slides/01-foundations/05-graphics/index.html#density-1",
    "title": "Graphics",
    "section": "Density",
    "text": "Density\n\nggplot(penguins) +\n  geom_density(aes(body_mass_g))"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#scatterplot-with-vectors",
    "href": "slides/01-foundations/05-graphics/index.html#scatterplot-with-vectors",
    "title": "Graphics",
    "section": "Scatterplot with vectors",
    "text": "Scatterplot with vectors\n\nggplot(data = NULL, aes(x = 1:10, y = 1:10)) +\n  geom_point()"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#extensions",
    "href": "slides/01-foundations/05-graphics/index.html#extensions",
    "title": "Graphics",
    "section": "Extensions",
    "text": "Extensions\nSee extensions at https://exts.ggplot2.tidyverse.org/gallery/"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#inspiration",
    "href": "slides/01-foundations/05-graphics/index.html#inspiration",
    "title": "Graphics",
    "section": "Inspiration",
    "text": "Inspiration\nR can be used to make incredible data visualisations.\nCheck out the galleries of these data viz practitioners working with ggplot2:\n\nCedric Scherer\nGeorgios Karamanis\nNicole Rennie\n\nAlso, #TidyTuesday on Twitter or Mastodon is a great source for further inspiration"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#ggplot2-resources",
    "href": "slides/01-foundations/05-graphics/index.html#ggplot2-resources",
    "title": "Graphics",
    "section": "ggplot2 resources",
    "text": "ggplot2 resources\n\nR for Data Science book: Chapters 3: Data Visualisation and 28: Graphics for Communication, to get up and running quickly\nggplot2 book, for an in-depth understanding\nPlotting anything with ggplot2 webinar with Thomas Lin Pederson (one of the main ggplot2 authors)\nR graphics cookbook, a practical guide that provides more than 150 recipes to help you generate high-quality graphs quickly\nCedric Scherer’s tutorial\nCedric Scherer’s ‘Graphic Design with ggplot2’ workshop\nggplot2 reference"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#data-visualisation-resources",
    "href": "slides/01-foundations/05-graphics/index.html#data-visualisation-resources",
    "title": "Graphics",
    "section": "Data visualisation resources",
    "text": "Data visualisation resources\nBooks about greating good data viz:\n\nData Visualisation: A practical Introduction by Kieran Healey\nFundamental’s of Data Visualisation by Claus Wilke"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#viewing-and-saving-plots-in-rstudio",
    "href": "slides/01-foundations/05-graphics/index.html#viewing-and-saving-plots-in-rstudio",
    "title": "Graphics",
    "section": "Viewing and saving plots in RStudio",
    "text": "Viewing and saving plots in RStudio\nIn RStudio, graphs are displayed in the Plots window. The plot is sized to fit the window and will be rescaled if the size of the window is changed.\nBack and forward arrows allow you to navigate through graphs that have been plotted.\nPlots can be saved in various formats using the Export drop down menu, which also has an option to copy to the clipboard.\nDEMO"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#getting-started-with-tables",
    "href": "slides/01-foundations/05-graphics/index.html#getting-started-with-tables",
    "title": "Graphics",
    "section": "Getting started with tables",
    "text": "Getting started with tables\nWe’re just going to scratch the surface of this today.\nWe’ll be using the gt and gtsummary packages, but there are many of other.\nHere’s a good overview of many different packages."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gt",
    "href": "slides/01-foundations/05-graphics/index.html#gt",
    "title": "Graphics",
    "section": "gt",
    "text": "gt\ngt is an R package to create tables. It provides a grammar of tables.\n\nThe gt philosophy: we can construct a wide variety of useful tables with a cohesive set of table parts. It all begins with table data (be it a tibble or a data frame). You then decide how to compose your gt table with the elements and formatting you need for the task at hand. Finally, the table is rendered by printing it at the console, including it in an R Markdown document, or exporting to a file using gtsave()"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#parts-of-a-gt-table",
    "href": "slides/01-foundations/05-graphics/index.html#parts-of-a-gt-table",
    "title": "Graphics",
    "section": "Parts of a gt table",
    "text": "Parts of a gt table\n\nFrom https://gt.rstudio.com"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#an-example",
    "href": "slides/01-foundations/05-graphics/index.html#an-example",
    "title": "Graphics",
    "section": "An example",
    "text": "An example\n\nFrom Albert Rapp’s gt book"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#resources",
    "href": "slides/01-foundations/05-graphics/index.html#resources",
    "title": "Graphics",
    "section": "Resources",
    "text": "Resources\nSee the article Case Study: gtcars for a thorough example of gt’s capabilities.\nSee also Albert Rapp’s book on gt."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#guidelines-for-better-tables",
    "href": "slides/01-foundations/05-graphics/index.html#guidelines-for-better-tables",
    "title": "Graphics",
    "section": "Guidelines for better tables",
    "text": "Guidelines for better tables\nHaving the technical know-how to code tables is one thing, making them look good and such that the reader can easily read the data is another!\nHighly recommend this Tom Mock guide, based on Jon Schwabish’s original. It covers guidelines for making better tables, and shows how to implement them in gt. It demonstrates even more of what gt can do than the article on the previous slide."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gtsummary",
    "href": "slides/01-foundations/05-graphics/index.html#gtsummary",
    "title": "Graphics",
    "section": "gtsummary",
    "text": "gtsummary\ngtsummary extends the gt package and is used for summarising tables and working with statistical model summaries."
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gtsummary-example-1-data",
    "href": "slides/01-foundations/05-graphics/index.html#gtsummary-example-1-data",
    "title": "Graphics",
    "section": "gtsummary example 1: data",
    "text": "gtsummary example 1: data\n\nlibrary(gtsummary)\n# make dataset with a few variables to summarize\ntrial2 <- trial %>% select(age, grade, response, trt)\n\nhead(trial2)\n\n# A tibble: 6 × 4\n    age grade response trt   \n  <dbl> <fct>    <int> <chr> \n1    23 II           0 Drug A\n2     9 I            1 Drug B\n3    31 II           0 Drug A\n4    NA III          1 Drug A\n5    51 III          1 Drug A\n6    39 I            0 Drug B"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gtsummary-example-1-code",
    "href": "slides/01-foundations/05-graphics/index.html#gtsummary-example-1-code",
    "title": "Graphics",
    "section": "gtsummary example 1: code",
    "text": "gtsummary example 1: code\n\n# summarize and augment the data with our package\nsummary_table <- \n  tbl_summary(\n    trial2,\n    by = trt, # split table by group\n    missing = \"no\" # don't list missing data separately\n  ) %>%\n  add_n() %>% # add column with total number of non-missing observations\n  add_p() %>% # test for a difference between groups\n  modify_header(label = \"**Variable**\") %>% # update the column header\n  bold_labels()"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gtsummary-example-1-output",
    "href": "slides/01-foundations/05-graphics/index.html#gtsummary-example-1-output",
    "title": "Graphics",
    "section": "gtsummary example 1: output",
    "text": "gtsummary example 1: output\n\n\n\n\n\n\n  \n  \n    \n      Variable\n      N\n      Drug A, N = 981\n      Drug B, N = 1021\n      p-value2\n    \n  \n  \n    Age\n189\n46 (37, 59)\n48 (39, 56)\n0.7\n    Grade\n200\n\n\n0.9\n        I\n\n35 (36%)\n33 (32%)\n\n        II\n\n32 (33%)\n36 (35%)\n\n        III\n\n31 (32%)\n33 (32%)\n\n    Tumor Response\n193\n28 (29%)\n33 (34%)\n0.5\n  \n  \n  \n    \n      1 Median (IQR); n (%)\n    \n    \n      2 Wilcoxon rank sum test; Pearson's Chi-squared test"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gtsummary-example-2-code",
    "href": "slides/01-foundations/05-graphics/index.html#gtsummary-example-2-code",
    "title": "Graphics",
    "section": "gtsummary example 2: code",
    "text": "gtsummary example 2: code\n\nmod1 <- glm(response ~ trt + age + grade, trial, family = binomial)\n\nregression_tab <- tbl_regression(mod1, exponentiate = TRUE)"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#gtsummary-example-2-output",
    "href": "slides/01-foundations/05-graphics/index.html#gtsummary-example-2-output",
    "title": "Graphics",
    "section": "gtsummary example 2: output",
    "text": "gtsummary example 2: output\n\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      OR1\n      95% CI1\n      p-value\n    \n  \n  \n    Chemotherapy Treatment\n\n\n\n        Drug A\n—\n—\n\n        Drug B\n1.13\n0.60, 2.13\n0.7\n    Age\n1.02\n1.00, 1.04\n0.10\n    Grade\n\n\n\n        I\n—\n—\n\n        II\n0.85\n0.39, 1.85\n0.7\n        III\n1.01\n0.47, 2.15\n>0.9\n  \n  \n  \n    \n      1 OR = Odds Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#table-inspiration",
    "href": "slides/01-foundations/05-graphics/index.html#table-inspiration",
    "title": "Graphics",
    "section": "Table inspiration",
    "text": "Table inspiration\nThe winners of the RStudio Table Contest\n\n2021\n2020, also has links to tutorials\n\nThe 2022 contest is open! Application guidelines"
  },
  {
    "objectID": "slides/01-foundations/05-graphics/index.html#license",
    "href": "slides/01-foundations/05-graphics/index.html#license",
    "title": "Graphics",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#disclaimer",
    "href": "slides/01-foundations/06-quarto/index.html#disclaimer",
    "title": "Quarto",
    "section": "Disclaimer",
    "text": "Disclaimer\nThese slides are almost entirely copied from Tom Mock’s ‘Getting Started with Quarto’ workshop at rstudio::conf(2022).\n\nWorkshop website\nWorkshop repo\n\nShared under Creative Commons 4.0 License."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#hello-quarto",
    "href": "slides/01-foundations/06-quarto/index.html#hello-quarto",
    "title": "Quarto",
    "section": "Hello Quarto",
    "text": "Hello Quarto\n\nQuarto® is an open-source scientific and technical publishing system built on Pandoc\n\n\n\nYou can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#what-about-rmarkdown",
    "href": "slides/01-foundations/06-quarto/index.html#what-about-rmarkdown",
    "title": "Quarto",
    "section": "What about RMarkdown?",
    "text": "What about RMarkdown?"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#so-what-is-quarto",
    "href": "slides/01-foundations/06-quarto/index.html#so-what-is-quarto",
    "title": "Quarto",
    "section": "So what is Quarto?",
    "text": "So what is Quarto?\n\nQuarto is the next generation of R Markdown. For everyone.\n\n\nQuarto is a command line interface (CLI) that renders plain text formats (.qmd, .rmd, .md) OR mixed formats (.ipynb/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#quarto-more-than-just-knitr",
    "href": "slides/01-foundations/06-quarto/index.html#quarto-more-than-just-knitr",
    "title": "Quarto",
    "section": "Quarto, more than just knitr",
    "text": "Quarto, more than just knitr\nWe learned from 10 years of literate programming with knitr + rmarkdown"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#for-everyone",
    "href": "slides/01-foundations/06-quarto/index.html#for-everyone",
    "title": "Quarto",
    "section": "For everyone",
    "text": "For everyone\n\nWorks with R, Python, Julia, Observable JS\nknitr and jupyter engines\nWorks in RStudio, Jupyter Notebooks, VS Code\n\n\nFor the R Training course, we’ll focus on R and RStudio"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#so-what-is-quarto-1",
    "href": "slides/01-foundations/06-quarto/index.html#so-what-is-quarto-1",
    "title": "Quarto",
    "section": "So what is Quarto?",
    "text": "So what is Quarto?\n\nA Quarto document i.e. a .qmd is a plain text file, like a .rmd, that can be rendered to many different formats"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#one-install-batteries-included",
    "href": "slides/01-foundations/06-quarto/index.html#one-install-batteries-included",
    "title": "Quarto",
    "section": "One install, “Batteries included”",
    "text": "One install, “Batteries included”\n\nRMarkdown grew into a large ecosystem, with varying syntax.\n\n\nQuarto comes “batteries included” straight out of the box\n\nHTML reports and websites\nPDF reports\nMS Office (Word, Powerpoint)\nPresentations (Powerpoint, Beamer, revealjs)\nBooks\n\n\n\n\nAny language, exact same approach and syntax"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#quarto-for-rmarkdown-users",
    "href": "slides/01-foundations/06-quarto/index.html#quarto-for-rmarkdown-users",
    "title": "Quarto",
    "section": "Quarto for RMarkdown users",
    "text": "Quarto for RMarkdown users\nSee FAQs, including a conversion from RMarkdown formats to Quarto equivalents."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-quarto-document",
    "href": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-quarto-document",
    "title": "Quarto",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n\nMetadata (YAML)\n\n---\nformat: html\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-quarto-document-1",
    "href": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-quarto-document-1",
    "title": "Quarto",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n\nCode\n\n\n```{r}\n#| eval: true\nlibrary(dplyr)\nmtcars %>% \n  group_by(cyl) %>%\n  summarize(mean = mean(mpg), .groups = \"drop\")\n```\n\n# A tibble: 3 × 2\n    cyl  mean\n  <dbl> <dbl>\n1     4  26.7\n2     6  19.7\n3     8  15.1"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-quarto-document-2",
    "href": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-quarto-document-2",
    "title": "Quarto",
    "section": "Anatomy of a Quarto document",
    "text": "Anatomy of a Quarto document\n\nText\n\n# Heading 1\nThis is a sentence with some **bold text** and some *italic text* \nThis is an [image](image.png)."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#metadata-yaml",
    "href": "slides/01-foundations/06-quarto/index.html#metadata-yaml",
    "title": "Quarto",
    "section": "Metadata: YAML",
    "text": "Metadata: YAML\nThe YAML metadata or header is:\n\nprocessed in many stages of the rendering process and can influence the final document in many different ways. It is placed at the very beginning of the document and is read by each of Pandoc, Quarto and knitr. Along the way, the information that it contains can affect the code, content, and the rendering process."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#yaml",
    "href": "slides/01-foundations/06-quarto/index.html#yaml",
    "title": "Quarto",
    "section": "YAML",
    "text": "YAML\n---\ntitle: \"My Document\"\nformat: \n  html:\n    toc: true\n    code-fold: true\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#markdown",
    "href": "slides/01-foundations/06-quarto/index.html#markdown",
    "title": "Quarto",
    "section": "Markdown",
    "text": "Markdown\n\nQuarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. Pandoc markdown is an extended and slightly revised version of John Gruber’s Markdown syntax.\n\n\n\nMarkdown is a plain text format that is designed to be easy to write, and, even more importantly, easy to read"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#text-formatting",
    "href": "slides/01-foundations/06-quarto/index.html#text-formatting",
    "title": "Quarto",
    "section": "Text Formatting",
    "text": "Text Formatting\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n*italics* and **bold**\nitalics and bold\n\n\nsuperscript^2^ / subscript~2~\nsuperscript2 / subscript2\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#headings",
    "href": "slides/01-foundations/06-quarto/index.html#headings",
    "title": "Quarto",
    "section": "Headings",
    "text": "Headings\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#links",
    "href": "slides/01-foundations/06-quarto/index.html#links",
    "title": "Quarto",
    "section": "Links",
    "text": "Links\n\nThere are several types of “links” or hyperlinks.\n\n\nMarkdownOutput\n\n\nYou can embed [named hyperlinks](https://quarto.org/),\ndirect urls like <https://quarto.org/>, and links to \n[other places](#quarto-anatomy) in \nthe document. The syntax is similar for embedding an\ninline image: ![Penguins](images/lter_penguins.png).\n\n\nYou can embed named hyperlinks, direct urls like https://quarto.org/, and links to other places in the document. The syntax is similar for embedding an inline image:"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#code",
    "href": "slides/01-foundations/06-quarto/index.html#code",
    "title": "Quarto",
    "section": "Code",
    "text": "Code\n\n\n```{r}\n#| output-location: column\n#| label: fig-airquality\n#| fig-cap: Temperature and ozone level.\n#| warning: false\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n```\n\n\n\n\n\nFigure 1: Temperature and ozone level."
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#literate-programming",
    "href": "slides/01-foundations/06-quarto/index.html#literate-programming",
    "title": "Quarto",
    "section": "Literate programming",
    "text": "Literate programming\nLiterate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros. - Wikipedia\n---\ntitle: \"ggplot2 demo\"\ndate: \"5/22/2021\"\nformat: html\n---\n\n## Air Quality\n\nThere is a relationship between temperature and the ozone level.\n\n```{r}\n#| label: fig-airquality\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n```"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#metadata-yaml-1",
    "href": "slides/01-foundations/06-quarto/index.html#metadata-yaml-1",
    "title": "Quarto",
    "section": "Metadata: YAML",
    "text": "Metadata: YAML\n“Yet Another Markup Language” or “YAML Ain’t Markup Language”\n---\nkey: value\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#output-options",
    "href": "slides/01-foundations/06-quarto/index.html#output-options",
    "title": "Quarto",
    "section": "Output Options",
    "text": "Output Options\n---\nformat: something\n---\n\n---\nformat: html\n---\n---\nformat: pdf\n---\n---\nformat: revealjs\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#options-on-options",
    "href": "slides/01-foundations/06-quarto/index.html#options-on-options",
    "title": "Quarto",
    "section": "Options on options",
    "text": "Options on options\nThen add option arguments!\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---\n\nSub-options should be below the main format output and spacing matters!\n---\nformat: \n  html:\n    option1: text\n    option2: logical\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#yaml-for-format-html",
    "href": "slides/01-foundations/06-quarto/index.html#yaml-for-format-html",
    "title": "Quarto",
    "section": "YAML for format: html",
    "text": "YAML for format: html"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#yaml-is-sensitive",
    "href": "slides/01-foundations/06-quarto/index.html#yaml-is-sensitive",
    "title": "Quarto",
    "section": "YAML is sensitive",
    "text": "YAML is sensitive\n---\nformat:html # invalid, no space between\n---\n\n---\nformat: # invalid, read as missing\nhtml\n---\n\n---\nformat: \n  html: # valid but needs next object\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-code-chunk",
    "href": "slides/01-foundations/06-quarto/index.html#anatomy-of-a-code-chunk",
    "title": "Quarto",
    "section": "Anatomy of a code chunk",
    "text": "Anatomy of a code chunk\n```{r}\n#| label: car-stuff\n#| echo: false\nmtcars %>% \n  distinct(cyl)\n```\n\n\nHas 3x backticks on each end ```\n\nIndicate engine (r) between curly braces {r}\n\nPlace options underneath, behind the #| (hashpipe):\n\n#| option1: value"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#quarto-presentations",
    "href": "slides/01-foundations/06-quarto/index.html#quarto-presentations",
    "title": "Quarto",
    "section": "Quarto presentations",
    "text": "Quarto presentations\n---\nformat: revealjs\n---\n---\nformat: \n  revealjs:\n    slide-number: true\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#this-quarto-presentation",
    "href": "slides/01-foundations/06-quarto/index.html#this-quarto-presentation",
    "title": "Quarto",
    "section": "This Quarto presentation",
    "text": "This Quarto presentation\n---\ntitle: Quarto\nsubtitle: R Foundations course\nauthor: Ella Kaye | Department of Statistics | University of Warwick\ntitle-slide-attributes:\n  data-background-color: \"#552D62\"\ndate: 2022-11-28\ndate-format: long\nformat: \n  revealjs:\n    theme: [default, ../../slides.scss]\n    slide-number: true\n    execute:\n      echo: true\n---"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#more-on-quarto-presentations",
    "href": "slides/01-foundations/06-quarto/index.html#more-on-quarto-presentations",
    "title": "Quarto",
    "section": "More on Quarto presentations",
    "text": "More on Quarto presentations\n\nOfficial guide\nSlidecraft 101 by Emil Hvitfeldt\n\nColours and Fonts\nCode and Output"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#resources",
    "href": "slides/01-foundations/06-quarto/index.html#resources",
    "title": "Quarto",
    "section": "Resources",
    "text": "Resources\n\nhttps://quarto.org\nAwesome Quarto\nBeautiful Reports and Persentations with Quarto\nGetting Started with Quarto workshop website"
  },
  {
    "objectID": "slides/01-foundations/06-quarto/index.html#license",
    "href": "slides/01-foundations/06-quarto/index.html#license",
    "title": "Quarto",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#overview",
    "href": "slides/01-foundations/04-sim-optim/index.html#overview",
    "title": "Simulation and Optimisation",
    "section": "Overview",
    "text": "Overview\n\nNumerical precision\nRandom numbers\nSimulation\nOptimisation\n\nThis material is largely reproduced from Ruth Ripley’s 2013 APTS course"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#how-r-stores-numbers",
    "href": "slides/01-foundations/04-sim-optim/index.html#how-r-stores-numbers",
    "title": "Simulation and Optimisation",
    "section": "How R Stores Numbers",
    "text": "How R Stores Numbers\nSome basic understanding is needed of how R stores and does arithmetic on numbers to avoid being surprised by the results it gives.\nFrom the R FAQ:\n\nThe only numbers that can be represented exactly in R’s numeric type are integers and fractions whose denominator is a power of 2. Other numbers have to be rounded to (typically) 53 binary digits accuracy. As a result, two floating point numbers will not reliably be equal unless they have been computed by the same algorithm, and not always even then."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#example",
    "href": "slides/01-foundations/04-sim-optim/index.html#example",
    "title": "Simulation and Optimisation",
    "section": "Example",
    "text": "Example\n\na <- sqrt(2)\na * a == 2\n\n[1] FALSE\n\na * a - 2\n\n[1] 4.440892e-16\n\nall.equal(a * a, 2)\n\n[1] TRUE\n\n\nThe function all.equal() compares two objects using a numeric tolerance of .Machine$double.eps^0.5.1 If you want much greater accuracy than this you will need to consider error propagation carefully.\n.Machine$double.eps is the smallest positive floating-point number x such that 1 + x != 1 on the machine R is running on."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#numerical-consideration-resources",
    "href": "slides/01-foundations/04-sim-optim/index.html#numerical-consideration-resources",
    "title": "Simulation and Optimisation",
    "section": "Numerical Consideration Resources",
    "text": "Numerical Consideration Resources\nFor more information, see e.g. \n\nDavid Goldberg (1991), “What Every Computer Scientist Should Know About Floating-Point Arithmetic”, ACM Computing Surveys, 23/1, 5–48, also available via https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html.\nRuth Ripley’s numerical considerations notes for APTS 2013."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#uses-of-simulation",
    "href": "slides/01-foundations/04-sim-optim/index.html#uses-of-simulation",
    "title": "Simulation and Optimisation",
    "section": "Uses of Simulation",
    "text": "Uses of Simulation\n\nStatistical models are often mathematically intractable\nGenerate multiple samples for a model by simulation\nUse these samples to investigate the behaviour of the model\nNeed realisations of random variables with various different distributions, our random numbers\nDetails of how to use the random numbers to create samples will not be considered here"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#random-number-generation",
    "href": "slides/01-foundations/04-sim-optim/index.html#random-number-generation",
    "title": "Simulation and Optimisation",
    "section": "Random Number Generation",
    "text": "Random Number Generation\n\nRandom numbers caluclated on a computer are not random.\nThey are pseudo-random, following a predicted sequence, but in the short-term (i.e. anything but the very long-term) will appear to be random.\nThis is useful, as two sets of random numbers of the same size from the same generator using the same initial value will be exactly the same. This is crucial for reproducibility.\nR provides functions for generating random samples from standard distibutions."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#random-seeds-in-r",
    "href": "slides/01-foundations/04-sim-optim/index.html#random-seeds-in-r",
    "title": "Simulation and Optimisation",
    "section": "Random Seeds in R",
    "text": "Random Seeds in R\n\nEach time a random number is required, R will use and update a variable called .Random.seed which is in your workspace.\nAt the first use, if .Random.seed does not exist, one will be created, with a value generated from the time.\nThe function set.seed(n) will set .Random.seed to a value derived from the argument n.\nUse set.seed() to repeat the same sequence of random numbers."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#random-number-generators-in-r",
    "href": "slides/01-foundations/04-sim-optim/index.html#random-number-generators-in-r",
    "title": "Simulation and Optimisation",
    "section": "Random Number Generators in R",
    "text": "Random Number Generators in R\n\nThere are various different generators available. R will use the one in use at the start of your session unless you alter it, even if you delete .Random.seed. For safety, you can specify the kind on calls to set.seed. Use set.seed(n, kind=\"default\") to ensure you are using R’s default.\nIt is possible to save and restore .Random.seed within your functions, but take care with scope (see next term!).\nNote that random number generation changed in R version 4.0.0, so you might get different outputs even with the same seed when using versions before and after this release."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#set.seed-example",
    "href": "slides/01-foundations/04-sim-optim/index.html#set.seed-example",
    "title": "Simulation and Optimisation",
    "section": "set.seed() Example",
    "text": "set.seed() Example\n\nsample(10)\n\n [1]  6  2  4  1  7  3  9 10  5  8\n\nset.seed(1)\nsample(10)\n\n [1]  9  4  7  1  2  5  3 10  6  8\n\nsample(10)\n\n [1]  3  1  5  8  2  6 10  9  4  7\n\nset.seed(1)\nsample(10)\n\n [1]  9  4  7  1  2  5  3 10  6  8"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#sample",
    "href": "slides/01-foundations/04-sim-optim/index.html#sample",
    "title": "Simulation and Optimisation",
    "section": "sample()",
    "text": "sample()\nThe sample() function re-samples from a data vector, with or without replacement.\nsample(x, size, replace = FALSE, prob = NULL)\n\n\n\n\n\n\n\nx\npositive integer or a vector\n\n\nsize\nnon-negative integer, number of items to choose\n\n\nreplace\nlogical - should sampling be with replacement\n\n\nprob\na vector of probability weights for obtaining the elements of the vector being sampled."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#sample-examples",
    "href": "slides/01-foundations/04-sim-optim/index.html#sample-examples",
    "title": "Simulation and Optimisation",
    "section": "sample() Examples",
    "text": "sample() Examples\n\nsample(n)sample(x)sample(x, replace = TRUE)sample(x, size = n)sample(x, n, replace = TRUE)sample(x, n, replace = TRUE, prob = probs)\n\n\nA random permutation of 1, …, n\n\nset.seed(123)\nsample(10)\n\n [1]  3 10  2  8  6  9  1  7  5  4\n\n\nSee also sample.int():\n\nset.seed(123)\nsample.int(10)\n\n [1]  3 10  2  8  6  9  1  7  5  4\n\n\n\n\nA random permutation of x for length(x) > 1\n\nset.seed(10)\nalph5 <- LETTERS[1:5]\nsample(alph5)\n\n[1] \"C\" \"A\" \"B\" \"E\" \"D\"\n\n\n\n\nA bootstrap sample\n\nset.seed(10)\nsample(alph5, replace = TRUE)\n\n[1] \"C\" \"A\" \"B\" \"D\" \"C\"\n\n\n\n\nSample n items from x without replacement\n\nset.seed(10)\nsample(alph5, 3)\n\n[1] \"C\" \"A\" \"B\"\n\n\n\n\nSample n items from x with replacement\n\nset.seed(1)\nsample(alph5, 3, replace = TRUE)\n\n[1] \"A\" \"D\" \"A\"\n\n\n\n\nProbability sample of n items from x\n\nx <- 1:4\nprobs <- c(1/2, 1/3, 1/12, 1/12)\n\nset.seed(1)\nsamp <- sample(x, 100, replace = TRUE, prob = probs)\ntable(samp)\n\nsamp\n 1  2  3  4 \n52 34 10  4"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#distributions-in-r",
    "href": "slides/01-foundations/04-sim-optim/index.html#distributions-in-r",
    "title": "Simulation and Optimisation",
    "section": "Distributions in R",
    "text": "Distributions in R\nMany statistical distributions are built into R. Each has a root name, e.g. norm for the normal distribution.\nThere are four functions for each distribution, with different letters prefixing the room name:\n\np for probability, the cumulative distribution function\nq for quantile, the inverse c.d.f.\nd for density, the density function, p.d.f.\nr for random, a random sample from the distribution.\n\nSo, for the normal distribution, we have the functions pnorm, qnorm, dnorm, rnorm."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#distributions-and-parameterisations",
    "href": "slides/01-foundations/04-sim-optim/index.html#distributions-and-parameterisations",
    "title": "Simulation and Optimisation",
    "section": "Distributions and Parameterisations",
    "text": "Distributions and Parameterisations\n\n\n\n\n\nDistribution\nBase name\nParameters\n\n\n\n\nbeta\nbeta\nshape1, shape2\n\n\nbinomial\nbinom\nsize, prob\n\n\nCauchy\ncauchy\nlocation, scale\n\n\nchi-squared\nchisq\ndf\n\n\nexponential\nexp\nrate\n\n\nF\nf\ndf1, df2\n\n\ngamma\ngamma\nshape, rate\n\n\ngeometric\ngeom\np\n\n\nhypergeometric\nhyper\nm, n, k\n\n\nlog-normal\nlnorm\nmeanlog, sdlog\n\n\nlogistic\nlogis\nlocation, scale\n\n\nnegative binomial\nnbinom\nsize, prob\n\n\nnormal\nnorm\nmean, sd\n\n\nPoisson\npois\nlambda\n\n\nStudent t\nt\ndf\n\n\nuniform\nunif\nmin, max\n\n\nWeibull\nweibull\nshape, scale"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#generating-random-samples-from-a-distibution",
    "href": "slides/01-foundations/04-sim-optim/index.html#generating-random-samples-from-a-distibution",
    "title": "Simulation and Optimisation",
    "section": "Generating Random Samples from a Distibution",
    "text": "Generating Random Samples from a Distibution\nTo obtain a sample of size n, use the r function for the distribution with the first argument n, and subsequent arguments the parameters for that distribution. The parameters often have default values. E.g.\n\n\n\n\n\n\n\nrunif(n, min=0, max=1)\nUniform\n\n\nrnorm(n, mean=0, sd=1)\nNormal\n\n\nrexp(n, rate=1)\nExponential with mean 1/rate\n\n\nrt(n, df)\nt with df degrees of freedom\n\n\nrbinom(n, size, prob)\nBinomial, success in size trials with probability of success prob\n\n\n\nTable from https://www.johndcook.com/blog/distributions_r_splus/"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#your-turn",
    "href": "slides/01-foundations/04-sim-optim/index.html#your-turn",
    "title": "Simulation and Optimisation",
    "section": "Your Turn!",
    "text": "Your Turn!\nSometimes sample() can lead to nasty surprises.\nConsider the following code. Which line might cause a problem?\n\nx <- 1:10\nsample(x[x > 8])\nsample(x[x > 9])\nsample(x[x > 10])\n\nRun the code to see what happens.\n\n\n\n\n\n\nWarning\n\n\nYou need to be careful when using sample() programmatically (i.e. in your function or simulation).\n\n\n\nSee ?sample for a safer version and check you understand how the proposed resample() function works."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#the-optimisation-problem",
    "href": "slides/01-foundations/04-sim-optim/index.html#the-optimisation-problem",
    "title": "Simulation and Optimisation",
    "section": "The Optimisation Problem",
    "text": "The Optimisation Problem\n\nGiven a function \\(f(x)\\), what value of \\(x\\) makes \\(f(x)\\) as small or large as possible?\nIn a statistical context, \\(x\\) will usually be the parameters of a model, and \\(f(x)\\) either the model likelihood to be maximised or some measure of discrepancy between data and predictions to be minimised.\nThe optimal set of parameters will give the best fit\nOnly need to consider small as \\(-f(x)\\) is large when \\(f(x)\\) is small.\nWe consider here general-purpose optimisers"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#local-and-global-minima",
    "href": "slides/01-foundations/04-sim-optim/index.html#local-and-global-minima",
    "title": "Simulation and Optimisation",
    "section": "Local and Global Minima",
    "text": "Local and Global Minima\n\nThe (negative of the) likelihood for the General Linear Model (and that for many other linear models) is well-behaved: it has a single, global minimum.\nFor more complicated models there may be many local minima.\nFinding a global minimum is difficult, and not always important. Only if local minima are widely separated in parameter space are they likely to invalidate our conclusions.\nWe will concentrate on methods of finding local minima. Check for different local minima by altering the initial values, algorithm used, or other parameters of the fitting process."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#univariate-optimisation",
    "href": "slides/01-foundations/04-sim-optim/index.html#univariate-optimisation",
    "title": "Simulation and Optimisation",
    "section": "Univariate Optimisation",
    "text": "Univariate Optimisation\noptimize (or optimise) finds a (possibly local) mimimum of a function in a specified interval with respect to its first argument.\n\nFunction to be minimised is the first argument to optimize\nCan pre-specify the function or include it in the command."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#univariate-optimisation-example",
    "href": "slides/01-foundations/04-sim-optim/index.html#univariate-optimisation-example",
    "title": "Simulation and Optimisation",
    "section": "Univariate Optimisation: Example",
    "text": "Univariate Optimisation: Example\n\nf <- function(x, a) {\n  (x - a)^2\n}\n\nxmin <- optimize(f, interval = c(0, 1), a = 1/3)\n\n# or\n\nxmin <- optimize(function(x, a) {(x - a)^2}, \n                 interval = c(0, 1), a = 1/3)\n\nxmin\n\n$minimum\n[1] 0.3333333\n\n$objective\n[1] 0\n\n\nNote how the (fixed) parameter a is passed into f."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#other-optimize-arguments",
    "href": "slides/01-foundations/04-sim-optim/index.html#other-optimize-arguments",
    "title": "Simulation and Optimisation",
    "section": "Other optimize() Arguments",
    "text": "Other optimize() Arguments\n\nAn interval within which to search must be specified, either by interval or by upper and lower\nTo maximise set maximum = TRUE\nAccuracy can be set using the tol argument\nNote the order of arguments: `optimize(f, interval, …, lower, upper, maximum, tol)\nThe ... can be named or unnamed and will be passed to f\nArguments after the ... must be specified by names.\noptimize returns a list with two items:\n\nminimum: the value of x at which f(x) is minimised\nobjective: the value of f(x) at x = minimum"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#general-optimisation",
    "href": "slides/01-foundations/04-sim-optim/index.html#general-optimisation",
    "title": "Simulation and Optimisation",
    "section": "General Optimisation",
    "text": "General Optimisation\n\nIn more than one dimension the problem is harder.\nR has several different functions: most flexible is optim() which includes several different algorithms.\nAlgorithm of choice depends on how easy it is to calculate derivatives for the function. Usually better to supply a function to calculate derivatives, but may be unnecessary extra work.\nEnsure the problem is scaled so that unit change in any parameter gives approximately unit change in objective."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#optim-methods",
    "href": "slides/01-foundations/04-sim-optim/index.html#optim-methods",
    "title": "Simulation and Optimisation",
    "section": "optim() Methods",
    "text": "optim() Methods\n\nNelder-MeadBFGSCGL-BFGS-BSANNBrent\n\n\n\nThe default method\nBasic idea: for a function with n parameters, choose a polygon with n+1 vertices. At each step, alter vertex with minimum f(x) to improve the objective function, by reflection, expansion or contraction\nDoes not use derivative information\nUseful for non-differentiable functions\nMay be rather slow\n\n\n\n\nA quasi-Newton method: builds up approximation to Hessian matrix from gradients at start and finish of steps\nUses the approximation to choose new search direction\nPerforms line search in this direction\nUpdate term for the Hessian approximation is due to Broyden, Fletcher, Goldfarb and Shanno (proposed separately by all four in 1970)\nUses derivative information, calculated either from a user-supplied function or by finite differences\nIf dimension is large, the matrix stored may be very large\n\n\n\n\nA conjugate gradient method: chooses successive search directions that are analogous to axes of an ellipse\nDoes not store a Hessian matrix\nThree different formulae for the search directions are implemented: Fletcher-Reeves, Polak-Ribiere or Beale-Sorenson\nLess robust than BFGS method\nUses derivative information, calculated either from a user-supplied function or by finite differences\n\n\n\n\nA limited memory version of BFGS\nDoes not store a Hessian matrix, only a limited number of update steps for it\nUses derivative information, calculated either from a user-supplied function or by finite differences\nCan restrict the solution to lie within a “box”, the only method of optim() that can do this\n\n\n\n\nA variant of simulated annealing A stochastic algorithm\nAccepts changes which increase the objective with positive probability (when minimising!)\nDoes not use derivative information\nCan be very slow to converge but may find a ‘good’ solution quickly\n\n\n\n\nAn interface to optimize()\nOnly for use with one dimensional problems\nIncluded for use inside other functions where only method can be specified, not the function to be used."
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#how-to-use-optim",
    "href": "slides/01-foundations/04-sim-optim/index.html#how-to-use-optim",
    "title": "Simulation and Optimisation",
    "section": "How to Use optim()",
    "text": "How to Use optim()\noptim(par, fn, gr=NULL, ..., method=c(\"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\", \"Brent\"), lower=-Inf, upper=Inf, control=list(), hessian=FALSE)\n\n\n\n\n\n\n\npar\nstarting values of the parameters\n\n\nfn\nfunction to be optimised (supply as for optimize)\n\n\ngr\nfunction to calculate the derivative, only relevant for methods “BFGS”, “CG” or “L-BFGS-B”\n\n\n…\nother parameters for (both) fn and gr\n\n\nmethod\nalgorithm to use\n\n\nlower, upper\nvector of limits for parameters (only allowed it method=\"L-BFGS-B\"\n\n\ncontrol\ncontrol options (see next slide)\n\n\nhessian\nlogical: whether to return a hessian estimate calculated by finite differences"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#optim-control-options",
    "href": "slides/01-foundations/04-sim-optim/index.html#optim-control-options",
    "title": "Simulation and Optimisation",
    "section": "optim(): Control Options",
    "text": "optim(): Control Options\nThere are very many. The most important are:\n\n\n\n\n\n\n\ntrace\nA positive integer: higher values give more information\n\n\nfnscale\nAn overall scaling: if negative, maximisation will be performed\n\n\nparscale\nA vector of scalings for the parameters\n\n\nmaxit\nMaximum number of iterations to be performed. May be used to terminate unsuccessful attempts. Also used to perform one or two steps if convergence is unimportant\n\n\ntype\nUsed to select formula for “CG” method"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#optim-components-of-return-value",
    "href": "slides/01-foundations/04-sim-optim/index.html#optim-components-of-return-value",
    "title": "Simulation and Optimisation",
    "section": "optim(): Components of Return Value",
    "text": "optim(): Components of Return Value\n\n\n\n\n\n\n\npar\nbest set of parameters\n\n\nvalue\nvalue of fn corresponding to par\n\n\ncounts\nnumber of calls to fn and gr: excludes calls for purposes of approximating derivatives or Hessian\n\n\nconvergence\nerror code: 0=success, 1=maxit reached, 10=degeneracy of Nelder-Mead simplex, 51=warning from “L-BFGS-B”, 52=error from “L-BFGS-B”\n\n\nmessage\nfurther information, if any\n\n\nhessian\nif requested, a symmetric matrix estimate of the Hessian at the solution"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#your-turn-q1",
    "href": "slides/01-foundations/04-sim-optim/index.html#your-turn-q1",
    "title": "Simulation and Optimisation",
    "section": "Your Turn! Q1",
    "text": "Your Turn! Q1\n\nfw <- function (x) {\n    10*sin(0.3*x)*sin(1.3*x^2) + 0.00001*x^4 + 0.2*x+80\n}\n\n\n\nUse optim() to find a global minimum\nUse optim() again to improve locally (aiming for -15.81515)"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#your-turn-q2",
    "href": "slides/01-foundations/04-sim-optim/index.html#your-turn-q2",
    "title": "Simulation and Optimisation",
    "section": "Your Turn! Q2",
    "text": "Your Turn! Q2\n\nTake a look at the introduction to the Wikipedia page for Rosenbrock’s banana function\nCopy this code for the fn and gr\n\n\nfr <- function(x) {   \n    x1 <- x[1]\n    x2 <- x[2]\n    100 * (x2 - x1 * x1)^2 + (1 - x1)^2\n}\n\ngr <- function(x) { \n    x1 <- x[1]\n    x2 <- x[2]\n    c(-400 * x1 * (x2 - x1 * x1) - 2 * (1 - x1),\n       200 *      (x2 - x1 * x1))\n}\n\n\nExperiment with the optim() function to see which methods converge"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#resources",
    "href": "slides/01-foundations/04-sim-optim/index.html#resources",
    "title": "Simulation and Optimisation",
    "section": "Resources",
    "text": "Resources\nThis material is reproduced in large part directly from the APTS 2013/14 resources by Ruth Ripley:\n\nhttps://portal.stats.ox.ac.uk/userdata/ruth/APTS2013/Rcourse5.pdf"
  },
  {
    "objectID": "slides/01-foundations/04-sim-optim/index.html#license",
    "href": "slides/01-foundations/04-sim-optim/index.html#license",
    "title": "Simulation and Optimisation",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#overview",
    "href": "slides/01-foundations/01-intro/index.html#overview",
    "title": "Introduction to R and RStudio",
    "section": "Overview",
    "text": "Overview\n\nWhy use R?\nUse RStudio to write and run R programmes\nCreate and start an R project\nUse install.packages() to install packages\nHow to get help in R\nSee examples of data wrangling and visualisation"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#what-can-r-do",
    "href": "slides/01-foundations/01-intro/index.html#what-can-r-do",
    "title": "Introduction to R and RStudio",
    "section": "What can R do?",
    "text": "What can R do?\n\nData import\nData management and wrangling\nExploratory data analysis\nStatistical modelling\nAdvanced statistics\nMachine learning\nData visualisation\nReports, articles, dashboards, presentations, websites\nIntegrates well with other languages\nPackages: share your code and use others"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#the-r-ecosystem",
    "href": "slides/01-foundations/01-intro/index.html#the-r-ecosystem",
    "title": "Introduction to R and RStudio",
    "section": "The R Ecosystem",
    "text": "The R Ecosystem\nBase R\n\n\nbase\n\nCreate R objects\nSummaries\nMaths functions\n\n\nrecommended\n\nStatistics\nGraphics\nExample data"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#the-r-ecosystem-1",
    "href": "slides/01-foundations/01-intro/index.html#the-r-ecosystem-1",
    "title": "Introduction to R and RStudio",
    "section": "The R Ecosystem",
    "text": "The R Ecosystem\nContributed packages\n\n\nCRAN\n\nOfficial R repository\nhttps://cran.r-project.org\nnearly 19000 packages\n\n\nBioconductor\n\nBioinformatics packages\nhttps://www.bioconductor.org\n~2100 packages\n\n\n\nGitHub\n\nPackages in development\nGitHub-only packages"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#the-tidyverse",
    "href": "slides/01-foundations/01-intro/index.html#the-tidyverse",
    "title": "Introduction to R and RStudio",
    "section": "The tidyverse",
    "text": "The tidyverse\nThe tidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar and data structures.\n\nFrom https://education.rstudio.com/blog/2020/07/teaching-the-tidyverse-in-2020-part-1-getting-started/"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#palmerpenguins",
    "href": "slides/01-foundations/01-intro/index.html#palmerpenguins",
    "title": "Introduction to R and RStudio",
    "section": "palmerpenguins",
    "text": "palmerpenguins\n\npalmerpenguins is a dataset package, designed to be a great example for data exploration and visualisation.\nIt contains measurement data for 344 penguins, from three different species, collected from three islands in the Palmer Archipelago, Antarctica.\n\n\nPenguin artwork by Allison Horst https://allisonhorst.github.io/palmerpenguins/articles/art.html"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#the-r-community",
    "href": "slides/01-foundations/01-intro/index.html#the-r-community",
    "title": "Introduction to R and RStudio",
    "section": "The R community",
    "text": "The R community\nAnother reason to love R is the community around it.\nIt prides itself on being friendly, diverse, helpful, and supportive.\n\nR user groups, especially Warwick RUG\nRLadies, especially RLadies Coventry\nRStudio Community\nR for Data Science\n#RStats and #TidyTuesday on twitter\nRainbowR (LGBTQ+)\nMiR (minorities in R)"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#at-first",
    "href": "slides/01-foundations/01-intro/index.html#at-first",
    "title": "Introduction to R and RStudio",
    "section": "At first",
    "text": "At first"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#with-script",
    "href": "slides/01-foundations/01-intro/index.html#with-script",
    "title": "Introduction to R and RStudio",
    "section": "With script",
    "text": "With script"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#best-practice-use-r-projects",
    "href": "slides/01-foundations/01-intro/index.html#best-practice-use-r-projects",
    "title": "Introduction to R and RStudio",
    "section": "Best practice: use R projects",
    "text": "Best practice: use R projects\nAn RStudio project is a contect for working on a specific project\n\nKeeps files well-organised\nAutomatically sets working directory to project root\nHas separate workspace and command history\nWorks well with version control via git or svn"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#getting-started-with-projects",
    "href": "slides/01-foundations/01-intro/index.html#getting-started-with-projects",
    "title": "Introduction to R and RStudio",
    "section": "Getting started with projects",
    "text": "Getting started with projects\n\nCreate a project from a new or existing directory via the file menu or new project button\nSwitch project, or open a different project in a new RStudio instance via the project menu"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#rstudio-project-demo",
    "href": "slides/01-foundations/01-intro/index.html#rstudio-project-demo",
    "title": "Introduction to R and RStudio",
    "section": "RStudio project demo",
    "text": "RStudio project demo\n\nCreate R-Foundations project\nCreate first script"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#using-the-console",
    "href": "slides/01-foundations/01-intro/index.html#using-the-console",
    "title": "Introduction to R and RStudio",
    "section": "Using the console",
    "text": "Using the console\n\nFor things that only need doing once, e.g. installing packages\nFor doing things you don’t need to track, e.g. requesting help files\nTo quickly explore new ideas before adding them to a script"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#using-the-console-shortcuts",
    "href": "slides/01-foundations/01-intro/index.html#using-the-console-shortcuts",
    "title": "Introduction to R and RStudio",
    "section": "Using the console: shortcuts",
    "text": "Using the console: shortcuts\nRStudio provides a few shortcuts to help write code in the R console\n\n↑/↓ go back/forward through history one command at a time\nCtrl/⌘ + ↑ review recent history and select command\nTab view possible completions for part-written expression\n\nCode completion (using Tab) is also provided in the source editor"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#using-the-console-demo",
    "href": "slides/01-foundations/01-intro/index.html#using-the-console-demo",
    "title": "Introduction to R and RStudio",
    "section": "Using the console: demo",
    "text": "Using the console: demo\n1 + 1\n?log\nlog(10)\nexp(-4 * 4 / 2) / sqrt(2 * pi)\ninstall.packages(\"tidyverse\")\ninstall.packages(\"palmerpenguins\")"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#using-scripts",
    "href": "slides/01-foundations/01-intro/index.html#using-scripts",
    "title": "Introduction to R and RStudio",
    "section": "Using scripts",
    "text": "Using scripts\nText files saved with an .R suffix are recognised as R code\nCode can be sent directly from a script to the console as follows:\n\nCtrl/⌘ + ↵ or  run current line\n\nRun multiple lines by selecting first\n\nCtrl/⌘ + Shift + ↵ or \n\nRun the script from start to finish."
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#why-r-scripts",
    "href": "slides/01-foundations/01-intro/index.html#why-r-scripts",
    "title": "Introduction to R and RStudio",
    "section": "Why R scripts",
    "text": "Why R scripts\nWriting an R script for an analysis has several advantages over a graphical user interface (GUI)\n\nIt provides a record of the exact approach used in an analysis\nIt enables the analysis to be easily reproduced and modified\nIt allows greater control"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#good-practice-for-r-scripts",
    "href": "slides/01-foundations/01-intro/index.html#good-practice-for-r-scripts",
    "title": "Introduction to R and RStudio",
    "section": "Good practice for R Scripts",
    "text": "Good practice for R Scripts\nOrganising your R script well will help you and others understand and use it.\n\nAdd comment or two at start to describe purpose of script\nLoad required data and packages at the start\nAvoid hard-coding: define variables such as file paths early on\nGive functions and variable meaningful names\nuse ### or #--- to separate sections (in RStudio Code > Insert Section)"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#r-script-demo",
    "href": "slides/01-foundations/01-intro/index.html#r-script-demo",
    "title": "Introduction to R and RStudio",
    "section": "R script demo",
    "text": "R script demo\n### load libraries\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n### Inspect data\nView(penguins)\nglimpse(penguins)\nhead(penguins)\nsummary(penguins)"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#installing-packages",
    "href": "slides/01-foundations/01-intro/index.html#installing-packages",
    "title": "Introduction to R and RStudio",
    "section": "Installing packages",
    "text": "Installing packages\nIn console\n\nInstall a package with install.packages(\"package_name\")\n\nWatch out for the plural!\n\nInstall multiple packages with install.packages(c(\"package1\", \"package2\"))\n\nThe c() function creates a vector\n\nOr use install button in packages pane:"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#loading-packages",
    "href": "slides/01-foundations/01-intro/index.html#loading-packages",
    "title": "Introduction to R and RStudio",
    "section": "Loading packages",
    "text": "Loading packages\nIn script\n\nLoad packages with library(package_name)"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#within-r---help-with-functions",
    "href": "slides/01-foundations/01-intro/index.html#within-r---help-with-functions",
    "title": "Introduction to R and RStudio",
    "section": "Within R - Help with functions",
    "text": "Within R - Help with functions\n\n# help with a specific function\nhelp(function_name)\n?function_name\n\n# quick reminder of the function arguments\narg(function_name)\n\n# see an example\nexample(function_name)\n\n# see the source code\n## in console\nfunction_name\n## in View pane (easier to read, syntax highlighting)\nView(function_name)"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#within-r---help.search",
    "href": "slides/01-foundations/01-intro/index.html#within-r---help.search",
    "title": "Introduction to R and RStudio",
    "section": "Within R - help.search",
    "text": "Within R - help.search\n\n# when ?function_name fails (e.g. don't have library loaded)\nhelp.search(\"function_name\") # note quotation marks\n??function_name\n\n# for when you can't quite remember the function name\n??something_like_function_name\n\n# R help start page\nhelp.start()\n## note that using the RStudio Help home button gives even more resources"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#within-r---help-with-package",
    "href": "slides/01-foundations/01-intro/index.html#within-r---help-with-package",
    "title": "Introduction to R and RStudio",
    "section": "Within R - Help with package",
    "text": "Within R - Help with package\n\n# `help`\nhelp(package = \"package_name\")\n# Help panel in RStudio will give links to all documentation\n# and help pages for that package\n\n# find/browse vignettes for installed (or specific) packages\nbrowseVignettes()\nbrowseVignettes(\"package_name\")\n\n# use auto-completion in RStudio to see what functions \n# are in a package\n?package::\n\ndplyr demo\nRStudio Help home demo"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#your-turn",
    "href": "slides/01-foundations/01-intro/index.html#your-turn",
    "title": "Introduction to R and RStudio",
    "section": "Your turn",
    "text": "Your turn\n\nCreate an R project called “R-foundations”\nInstall the packages palmerpenguins and tidyverse\nFind the help page for the penguins dataset\nFind the help page for the filter function in the dplyr package\nExperiment typing commands into the console or in an R script.\n\nlink to slides"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#the-data",
    "href": "slides/01-foundations/01-intro/index.html#the-data",
    "title": "Introduction to R and RStudio",
    "section": "The data",
    "text": "The data\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n 2 Adelie  Torgersen           39.5          17.4        186    3800 fema…  2007\n 3 Adelie  Torgersen           40.3          18          195    3250 fema…  2007\n 4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 5 Adelie  Torgersen           36.7          19.3        193    3450 fema…  2007\n 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n 7 Adelie  Torgersen           38.9          17.8        181    3625 fema…  2007\n 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n 9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n# … with 334 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#   ²​body_mass_g"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#notes",
    "href": "slides/01-foundations/01-intro/index.html#notes",
    "title": "Introduction to R and RStudio",
    "section": "Notes",
    "text": "Notes\nMaterial inspired by and remixed from:\n\nhttps://www.heatherturner.net/teaching/zero-to-hero/#1\nhttps://ellakaye.github.io/Rladies-Coventry-getting-help-in-R/getting_help_in_R.html#1\nhttps://portal.stats.ox.ac.uk/userdata/ruth/APTS2013/Rcourse1.pdf\nhttps://carpentries-incubator.github.io/r-tidyverse-4-datasets/"
  },
  {
    "objectID": "slides/01-foundations/01-intro/index.html#license",
    "href": "slides/01-foundations/01-intro/index.html#license",
    "title": "Introduction to R and RStudio",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#overview",
    "href": "slides/01-foundations/02-data-wrangling/index.html#overview",
    "title": "Data Types, Structures and Wrangling",
    "section": "Overview",
    "text": "Overview\n\nData types\nData structures\nData import and wrangling"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#assigning-in-r",
    "href": "slides/01-foundations/02-data-wrangling/index.html#assigning-in-r",
    "title": "Data Types, Structures and Wrangling",
    "section": "Assigning in R",
    "text": "Assigning in R\nThe assignment operator in R is <-\nWe can create objects in R and assign them names:\n\nx <- 1 + 3\n\nThen we can inspect the objects we have created:\n\nx\n\n[1] 4\n\n\nAnd use them further:\n\nx + 5\n\n[1] 9"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#naming-objects",
    "href": "slides/01-foundations/02-data-wrangling/index.html#naming-objects",
    "title": "Data Types, Structures and Wrangling",
    "section": "Naming objects",
    "text": "Naming objects\n\nforbiddengoodbad\n\n\nObject names cannot:\n\nstart with a number\ncontain certain characters like , - ?\ncontain a space (unless in ``, but that is not best practice)\n\n\n\n\nmeaningful yet concise\n\n\nday_one\nday_1\n\nconsistent\n\n\ni_use_snake_case\nother.people.use.periods\nevenOthersUseCamelCase\nsnake_case is preferred in R, especially in the tidyverse.\n\n\n\nnot meaningful\n\n\nfoo\nbar\n\nunnecessarily long or difficult to read\n\n\nfirst_day_of_month\ndayone\n\ninconsistent"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#rstudio-demo",
    "href": "slides/01-foundations/02-data-wrangling/index.html#rstudio-demo",
    "title": "Data Types, Structures and Wrangling",
    "section": "RStudio demo",
    "text": "RStudio demo\nAssigning and environment pane.\nThere is an RStudio shortcut for <- which also puts spaces around it: Alt/⌥ + -"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#basic-data-types-in-r",
    "href": "slides/01-foundations/02-data-wrangling/index.html#basic-data-types-in-r",
    "title": "Data Types, Structures and Wrangling",
    "section": "Basic data types in R",
    "text": "Basic data types in R\n\ncharacter: \"a\", \"hello, world!\"\ndouble: 3, 3.14, pi\ninteger: 3L (the L tells R to store this as an interger)\nlogical: TRUE and FALSE\ncomplex: 3+2i. N.B. need to write 1i for \\(\\sqrt(-1)\\).\nraw: holds raw bytes (rarely used)\n\nN.B. double and integer types are both numeric"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#special-values",
    "href": "slides/01-foundations/02-data-wrangling/index.html#special-values",
    "title": "Data Types, Structures and Wrangling",
    "section": "Special values",
    "text": "Special values\n\nNA: The value NA is given to any data which R knows to be missing. It is not a character string, i.e. it is different to \"NA\"\nInf: Positive infinity, e.g. the result of dividing a non-zero number by zero\nNaN: Not a number, e.g. attempting to find the logarithm of a negative number\nNULL: The null object. Often returned by expressions and functions whose value is undefined"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#data-structures",
    "href": "slides/01-foundations/02-data-wrangling/index.html#data-structures",
    "title": "Data Types, Structures and Wrangling",
    "section": "Data structures",
    "text": "Data structures\nData structures are the building blocks of R code.\nIn R, the main types of structures are\n\nvectors\nfactors\nmatrices and arrays\nlists\ndata frames\n\nFocus today on vectors, factors and data frames"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#vectors",
    "href": "slides/01-foundations/02-data-wrangling/index.html#vectors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Vectors",
    "text": "Vectors\nA single number is a special case of a numeric vector. Vectors of length greater than one can be created using the concatenate function, c.\n\nx <- c(1, 3, 6)\nfruits <- c(\"apple\", \"pear\")\n\nThe elements of the vector must be of the same type: common types are numeric, character and logical.\nThere are built-in functions for getting information about vectors, e.g.\n\nlength(fruits)\n\n[1] 2"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#creating-vectors",
    "href": "slides/01-foundations/02-data-wrangling/index.html#creating-vectors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Creating vectors",
    "text": "Creating vectors\nThere are some useful shortcuts for certain types of vector:\n\n1:5\n\n[1] 1 2 3 4 5\n\nseq(from = 3, to = 5, by = 0.5)\n\n[1] 3.0 3.5 4.0 4.5 5.0\n\nLETTERS\n\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\"\n[20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"\n\n\nWhat do you think letters returns?"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#subsetting-vectors",
    "href": "slides/01-foundations/02-data-wrangling/index.html#subsetting-vectors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Subsetting vectors",
    "text": "Subsetting vectors\nWe subset vectors using []:\n\nBy position, starting at 1\n\n\nletters[c(1, 5, 9, 15, 21)]\n\n[1] \"a\" \"e\" \"i\" \"o\" \"u\"\n\n\n\nBy logical vector\n\n\nx <- c(5, 3, 6, 1)\nx[c(TRUE, FALSE, TRUE, FALSE)]\n\n[1] 5 6\n\n\n\nx[x > 4]\n\n[1] 5 6"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#your-turn",
    "href": "slides/01-foundations/02-data-wrangling/index.html#your-turn",
    "title": "Data Types, Structures and Wrangling",
    "section": "Your turn!",
    "text": "Your turn!\n\nIn your R-Foundations project from last week, create and save a new script called data-types.R\nLook at the help page for the rep() function: ?rep\nStarting with the vector c(1,3,6), can you make the following patterns:\n\n1, 3, 6, 1, 3, 6\n1, 1, 3, 3, 6, 6\n1, 1, 3, 3, 6, 6, 1, 1, 3, 3, 6, 6"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#factors",
    "href": "slides/01-foundations/02-data-wrangling/index.html#factors",
    "title": "Data Types, Structures and Wrangling",
    "section": "Factors",
    "text": "Factors\nFactors are used to represent categorical data. They can be ordered or unordered.\nFactors are stored as integers, and have labels associated with these unique integers. While factors usually look (and often behave) like character vectors, they are actually integers under the hood, and you need to be careful when treating them like strings."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#factors-1",
    "href": "slides/01-foundations/02-data-wrangling/index.html#factors-1",
    "title": "Data Types, Structures and Wrangling",
    "section": "Factors",
    "text": "Factors\nOnce created, factors can only contain a pre-defined set values, known as levels. By default, R always sorts levels in alphabetical order. For instance, if you have a factor with 2 levels:\n\nfruits <- factor(c(\"apple\", \"apple\", \"pear\"))\nfruits\n\n[1] apple apple pear \nLevels: apple pear\n\nstr(fruits)\n\n Factor w/ 2 levels \"apple\",\"pear\": 1 1 2\n\n\nThe forcats package from the tidyverse has many functions for dealing with factors."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#data-frames",
    "href": "slides/01-foundations/02-data-wrangling/index.html#data-frames",
    "title": "Data Types, Structures and Wrangling",
    "section": "Data frames",
    "text": "Data frames\nData sets are stored in R as data frames\nThese are structured as a list of objects, typically vectors, of the same length.\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nstr(penguins)\n\ntibble [344 × 8] (S3: tbl_df/tbl/data.frame)\n $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ...\n $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ...\n $ year             : int [1:344] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ..."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#tibbles",
    "href": "slides/01-foundations/02-data-wrangling/index.html#tibbles",
    "title": "Data Types, Structures and Wrangling",
    "section": "tibbles",
    "text": "tibbles\nFrom the tibble page:\n\nA tibble, or tbl_df, is a modern reimagining of the data.frame, keeping what time has proven to be effective, and throwing out what is not. Tibbles are data.frames that are lazy and surly: they do less (i.e. they don’t change variable names or types, and don’t do partial matching) and complain more (e.g. when a variable does not exist). This forces you to confront problems earlier, typically leading to cleaner, more expressive code. Tibbles also have an enhanced print() method which makes them easier to use with large datasets containing complex objects."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#creating-data-frames",
    "href": "slides/01-foundations/02-data-wrangling/index.html#creating-data-frames",
    "title": "Data Types, Structures and Wrangling",
    "section": "Creating data frames",
    "text": "Creating data frames\n\n`my numbers` <- 1:9\nfruits <- rep(c(\"apple\", \"pear\", \"orange\"), 3)\n\n\n\n\ndata.frame(`my numbers`, \n           fruits)\n\n  my.numbers fruits\n1          1  apple\n2          2   pear\n3          3 orange\n4          4  apple\n5          5   pear\n6          6 orange\n7          7  apple\n8          8   pear\n9          9 orange\n\n\n\n\ntibble(`my numbers`, \n       fruits)\n\n# A tibble: 9 × 2\n  `my numbers` fruits\n         <int> <chr> \n1            1 apple \n2            2 pear  \n3            3 orange\n4            4 apple \n5            5 pear  \n6            6 orange\n7            7 apple \n8            8 pear  \n9            9 orange\n\n\n\n\nSpot the differences!"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#import-dataset-button",
    "href": "slides/01-foundations/02-data-wrangling/index.html#import-dataset-button",
    "title": "Data Types, Structures and Wrangling",
    "section": "Import dataset (button)",
    "text": "Import dataset (button)\nUsing the Import Dataset dialog in RStudio\n\nwe can import files stored locally or online in the following formats:\n\n.txt/.csv via read_delim/read_csv from readr.\n.xlsx via read_excel from readxl.\n.sav/.por , .sas7bdat and .dta via read_spss, read_sas and read_stata respectively from haven.\n\nMost of these functions also allow files to be compressed, e.g. as .zip."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#file-names-and-paths-and-project-structure",
    "href": "slides/01-foundations/02-data-wrangling/index.html#file-names-and-paths-and-project-structure",
    "title": "Data Types, Structures and Wrangling",
    "section": "File names and paths and project structure",
    "text": "File names and paths and project structure\nIt’s REALLY important to have good file names and paths, and a good project structure.\nI leave you in the extremely capable hand of Danielle Navarro to take you thoroughly through best practices:\nhttps://djnavarro.net/slides-project-structure/#1\nI also HIGHLY recommend you check out the here package, which enables easy file referencing in project-oriented workflows"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#import-data-code",
    "href": "slides/01-foundations/02-data-wrangling/index.html#import-data-code",
    "title": "Data Types, Structures and Wrangling",
    "section": "Import data (code)",
    "text": "Import data (code)\nThe rio package provides a common interface to the functions used by Import Dataset as well as many others.\nThe data format is automatically recognised from the file extension. To read the data in as a tibble, we use the setclass argument.\n\nlibrary(rio)\npenguins_lter <- import(\"data/penguins_lter.csv\")\npenguins_lter_tbl <- import(\"data/penguins_lter.csv\", setclass = \"tibble\")\n\nSee ?rio for the underlying functions used for each format and the corresponding optional arguments, e.g. the skip argument to read_excel to skip a certain number of rows."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#import-data-demo",
    "href": "slides/01-foundations/02-data-wrangling/index.html#import-data-demo",
    "title": "Data Types, Structures and Wrangling",
    "section": "Import data demo",
    "text": "Import data demo\n\nFrom file\nFrom URL\n\nhttps://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-09/wheels.csv\n\nYour turn!"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#dplyr",
    "href": "slides/01-foundations/02-data-wrangling/index.html#dplyr",
    "title": "Data Types, Structures and Wrangling",
    "section": "dplyr",
    "text": "dplyr\nThe dplyr package (part of the tidyverse) provides the following key functions to operate on data frames:\n\nfilter()\narrange()\nselect()\nmutate()\nsummarise()\n\nThey all take a data frame as their first argument. The subsequent arguments describe what to do with the data frame. The result is a new data frame."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#load-packages",
    "href": "slides/01-foundations/02-data-wrangling/index.html#load-packages",
    "title": "Data Types, Structures and Wrangling",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(dplyr)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#filter-pick-rows-based-on-values-of-observations.",
    "href": "slides/01-foundations/02-data-wrangling/index.html#filter-pick-rows-based-on-values-of-observations.",
    "title": "Data Types, Structures and Wrangling",
    "section": "filter(): pick rows based on values of observations.",
    "text": "filter(): pick rows based on values of observations.\n\nExampleNotes\n\n\n\nfilter(penguins, \n       species == \"Gentoo\", \n       bill_length_mm > 48 & bill_depth_mm > 15, \n       !is.na(sex))\n\n# A tibble: 39 × 8\n   species island bill_length_mm bill_depth_mm flipper_len…¹ body_…² sex    year\n   <fct>   <fct>           <dbl>         <dbl>         <int>   <int> <fct> <int>\n 1 Gentoo  Biscoe           50            16.3           230    5700 male   2007\n 2 Gentoo  Biscoe           50            15.2           218    5700 male   2007\n 3 Gentoo  Biscoe           49            16.1           216    5550 male   2007\n 4 Gentoo  Biscoe           49.3          15.7           217    5850 male   2007\n 5 Gentoo  Biscoe           49.2          15.2           221    6300 male   2007\n 6 Gentoo  Biscoe           48.7          15.1           222    5350 male   2007\n 7 Gentoo  Biscoe           50            15.3           220    5550 male   2007\n 8 Gentoo  Biscoe           59.6          17             230    6050 male   2007\n 9 Gentoo  Biscoe           48.4          16.3           220    5400 male   2008\n10 Gentoo  Biscoe           48.7          15.7           208    5350 male   2008\n# … with 29 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#   ²​body_mass_g\n\n\n\n\n\nvariable names are unquoted\nbuilding blocks of conditions:\n\n\n\n\nBuilding block\nR code\n\n\n\n\nBinary comparisons\n>, <, ==, <=, >=, !=\n\n\nLogical operators\nor |, and &, not !\n\n\nValue matching\ne.g. x %in% 6:9\n\n\nMissing indicator\ne.g. is.na(x)"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#select-select-variables-columns-in-a-dataset",
    "href": "slides/01-foundations/02-data-wrangling/index.html#select-select-variables-columns-in-a-dataset",
    "title": "Data Types, Structures and Wrangling",
    "section": "select(): select variables (columns) in a dataset",
    "text": "select(): select variables (columns) in a dataset\n\nExample 1Example 2Example 3Example 4Note\n\n\n\nselect(penguins, bill_length_mm, bill_depth_mm)\n\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            <dbl>         <dbl>\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# … with 334 more rows\n\n\n\n\n\nselect(penguins, bill_length_mm:body_mass_g)\n\n# A tibble: 344 × 4\n   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n            <dbl>         <dbl>             <int>       <int>\n 1           39.1          18.7               181        3750\n 2           39.5          17.4               186        3800\n 3           40.3          18                 195        3250\n 4           NA            NA                  NA          NA\n 5           36.7          19.3               193        3450\n 6           39.3          20.6               190        3650\n 7           38.9          17.8               181        3625\n 8           39.2          19.6               195        4675\n 9           34.1          18.1               193        3475\n10           42            20.2               190        4250\n# … with 334 more rows\n\n\n\n\n\nselect(penguins, starts_with(\"bill\"))\n\n# A tibble: 344 × 2\n   bill_length_mm bill_depth_mm\n            <dbl>         <dbl>\n 1           39.1          18.7\n 2           39.5          17.4\n 3           40.3          18  \n 4           NA            NA  \n 5           36.7          19.3\n 6           39.3          20.6\n 7           38.9          17.8\n 8           39.2          19.6\n 9           34.1          18.1\n10           42            20.2\n# … with 334 more rows\n\n\n\n\n\nselect(penguins, where(is.numeric))\n\n# A tibble: 344 × 5\n   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g  year\n            <dbl>         <dbl>             <int>       <int> <int>\n 1           39.1          18.7               181        3750  2007\n 2           39.5          17.4               186        3800  2007\n 3           40.3          18                 195        3250  2007\n 4           NA            NA                  NA          NA  2007\n 5           36.7          19.3               193        3450  2007\n 6           39.3          20.6               190        3650  2007\n 7           38.9          17.8               181        3625  2007\n 8           39.2          19.6               195        4675  2007\n 9           34.1          18.1               193        3475  2007\n10           42            20.2               190        4250  2007\n# … with 334 more rows\n\n\n\n\nThere are several other selectors. See ?dplyr::select or online for further details."
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#a-note-about-pipes-vs",
    "href": "slides/01-foundations/02-data-wrangling/index.html#a-note-about-pipes-vs",
    "title": "Data Types, Structures and Wrangling",
    "section": "A note about pipes: |> vs %>%",
    "text": "A note about pipes: |> vs %>%\nPipes pass what comes before into an argument (by default the first) of what comes after.\nPipes are a powerful tool for clearly expressing a sequence of multiple operations.\n\n\n|>\n\nThe ‘native’ pipe, built into base R since v4.1 (May 2021)\nImproved in v4.2 (April 2022)\n\n\n%>%\n\nHas been around in the magrittr package since 2014\nUsed throughout the tidyverse (though that is changing)"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#pipes-similarity",
    "href": "slides/01-foundations/02-data-wrangling/index.html#pipes-similarity",
    "title": "Data Types, Structures and Wrangling",
    "section": "Pipes: similarity",
    "text": "Pipes: similarity\nBy default, a pipe takes what comes before and pass it to first argument of what comes after.\n\nExample 1Example 2\n\n\n\nlog(2, base = 10)\n\n[1] 0.30103\n\n2 %>% log(base = 10)\n\n[1] 0.30103\n\n2 |> log(base = 10)\n\n[1] 0.30103\n\n\n\n\n\npaste(\"a\", \"b\", \"c\")\n\n[1] \"a b c\"\n\n\"a\" %>% paste(\"b\", \"c\")\n\n[1] \"a b c\"\n\n\"a\" |> paste(\"b\", \"c\")\n\n[1] \"a b c\""
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#pipes-key-difference",
    "href": "slides/01-foundations/02-data-wrangling/index.html#pipes-key-difference",
    "title": "Data Types, Structures and Wrangling",
    "section": "Pipes: key difference",
    "text": "Pipes: key difference\nSo far, so good, but what if we want to pipe into a subsequent argument?\n\nExample 1Example 2\n\n\n\nlog(2, 10) ## don't need to name the argument\n\n[1] 0.30103\n\n10 %>% log(2, .)\n\n[1] 0.30103\n\n10 |> log(2, base = _)\n\n[1] 0.30103\n\n\n\n\n\npaste(\"a\", \"b\", \"c\")\n\n[1] \"a b c\"\n\n\"b\" %>% paste(\"a\", ., \"c\")\n\n[1] \"a b c\"\n\n\"b\" |> paste(\"a\", ..2 = _, \"c\")\n\n[1] \"a b c\"\n\n\n\n\n\nDifferent placeholder (. vs _) and with native pipe need a named argument"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#arrange-change-the-ordering-of-rows",
    "href": "slides/01-foundations/02-data-wrangling/index.html#arrange-change-the-ordering-of-rows",
    "title": "Data Types, Structures and Wrangling",
    "section": "arrange(): change the ordering of rows",
    "text": "arrange(): change the ordering of rows\n\nExample 1Example 2Example 3\n\n\n\npenguins |>\n  select(species, sex, flipper_length_mm) |>\n  arrange(flipper_length_mm)\n\n# A tibble: 344 × 3\n   species   sex    flipper_length_mm\n   <fct>     <fct>              <int>\n 1 Adelie    female               172\n 2 Adelie    female               174\n 3 Adelie    female               176\n 4 Adelie    female               178\n 5 Adelie    male                 178\n 6 Adelie    female               178\n 7 Chinstrap female               178\n 8 Adelie    <NA>                 179\n 9 Adelie    <NA>                 180\n10 Adelie    male                 180\n# … with 334 more rows\n\n\n\n\n\npenguins |>\n  select(species, sex, flipper_length_mm) |>\n  arrange(species, flipper_length_mm)\n\n# A tibble: 344 × 3\n   species sex    flipper_length_mm\n   <fct>   <fct>              <int>\n 1 Adelie  female               172\n 2 Adelie  female               174\n 3 Adelie  female               176\n 4 Adelie  female               178\n 5 Adelie  male                 178\n 6 Adelie  female               178\n 7 Adelie  <NA>                 179\n 8 Adelie  <NA>                 180\n 9 Adelie  male                 180\n10 Adelie  male                 180\n# … with 334 more rows\n\n\n\n\n\npenguins |>\n  select(species, sex, flipper_length_mm) |>\n  arrange(desc(flipper_length_mm))\n\n# A tibble: 344 × 3\n   species sex   flipper_length_mm\n   <fct>   <fct>             <int>\n 1 Gentoo  male                231\n 2 Gentoo  male                230\n 3 Gentoo  male                230\n 4 Gentoo  male                230\n 5 Gentoo  male                230\n 6 Gentoo  male                230\n 7 Gentoo  male                230\n 8 Gentoo  male                230\n 9 Gentoo  male                229\n10 Gentoo  male                229\n# … with 334 more rows"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#mutate-create-and-modify-columns",
    "href": "slides/01-foundations/02-data-wrangling/index.html#mutate-create-and-modify-columns",
    "title": "Data Types, Structures and Wrangling",
    "section": "mutate(): create and modify columns",
    "text": "mutate(): create and modify columns\n\nExample 1Example 2Example 3\n\n\n\npenguins |>\n  select(bill_length_mm) |>\n  mutate(bill_length_mm_sq = bill_length_mm^2)\n\n# A tibble: 344 × 2\n   bill_length_mm bill_length_mm_sq\n            <dbl>             <dbl>\n 1           39.1             1529.\n 2           39.5             1560.\n 3           40.3             1624.\n 4           NA                 NA \n 5           36.7             1347.\n 6           39.3             1544.\n 7           38.9             1513.\n 8           39.2             1537.\n 9           34.1             1163.\n10           42               1764 \n# … with 334 more rows\n\n\n\n\n\npenguins |>\n  filter(species == \"Gentoo\") |>\n  select(sex, flipper_length_mm) |>\n  mutate(size = if_else(flipper_length_mm > 217, \"big\", \"small\"))\n\n# A tibble: 124 × 3\n   sex    flipper_length_mm size \n   <fct>              <int> <chr>\n 1 female               211 small\n 2 male                 230 big  \n 3 female               210 small\n 4 male                 218 big  \n 5 male                 215 small\n 6 female               210 small\n 7 female               211 small\n 8 male                 219 big  \n 9 female               209 small\n10 male                 215 small\n# … with 114 more rows\n\n\n\n\n\npenguins |>\n  select(bill_length_mm) |>\n  filter(!is.na(bill_length_mm)) |>\n  mutate(bill_length_mm_cumsum = cumsum(bill_length_mm))\n\n# A tibble: 342 × 2\n   bill_length_mm bill_length_mm_cumsum\n            <dbl>                 <dbl>\n 1           39.1                  39.1\n 2           39.5                  78.6\n 3           40.3                 119. \n 4           36.7                 156. \n 5           39.3                 195. \n 6           38.9                 234. \n 7           39.2                 273  \n 8           34.1                 307. \n 9           42                   349. \n10           37.8                 387. \n# … with 332 more rows"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#summarise-reduces-multiple-values-down-to-a-single-summary",
    "href": "slides/01-foundations/02-data-wrangling/index.html#summarise-reduces-multiple-values-down-to-a-single-summary",
    "title": "Data Types, Structures and Wrangling",
    "section": "summarise(): reduces multiple values down to a single summary",
    "text": "summarise(): reduces multiple values down to a single summary\n\nExample 1Example 2Example 3: count\n\n\n\npenguins |>\n  summarise(mean(body_mass_g, na.rm = TRUE))  \n\n# A tibble: 1 × 1\n  `mean(body_mass_g, na.rm = TRUE)`\n                              <dbl>\n1                             4202.\n\n\n\n\n\npenguins |>\n  group_by(species, sex) |>\n  filter(!is.na(sex)) |>\n  summarise(mean = mean(body_mass_g, na.rm = TRUE)) # give column a name\n\n# A tibble: 6 × 3\n# Groups:   species [3]\n  species   sex     mean\n  <fct>     <fct>  <dbl>\n1 Adelie    female 3369.\n2 Adelie    male   4043.\n3 Chinstrap female 3527.\n4 Chinstrap male   3939.\n5 Gentoo    female 4680.\n6 Gentoo    male   5485.\n\n\n\n\n\npenguins |>\n  count(species, island)\n\n# A tibble: 5 × 3\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124\n\n\nShortcut for\n\npenguins |>\n  group_by(species, island) %>%\n  summarise(n = n())"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#your-turn-1",
    "href": "slides/01-foundations/02-data-wrangling/index.html#your-turn-1",
    "title": "Data Types, Structures and Wrangling",
    "section": "Your turn!",
    "text": "Your turn!\n\nExplore the wheels data!\nBe ready to share some of your code in the chat"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#tidydatatutor.com",
    "href": "slides/01-foundations/02-data-wrangling/index.html#tidydatatutor.com",
    "title": "Data Types, Structures and Wrangling",
    "section": "tidydatatutor.com",
    "text": "tidydatatutor.com\nTidy Data Tutor lets you write R and Tidyverse code in your browser and see how your data frame changes at each step of a data analysis pipeline.\nDEMO"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#additional-resources",
    "href": "slides/01-foundations/02-data-wrangling/index.html#additional-resources",
    "title": "Data Types, Structures and Wrangling",
    "section": "Additional resources",
    "text": "Additional resources\n\nRStudio cheatsheets\nR for data science book\nferriswheels"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#sources",
    "href": "slides/01-foundations/02-data-wrangling/index.html#sources",
    "title": "Data Types, Structures and Wrangling",
    "section": "Sources",
    "text": "Sources\nMaterial inspired by and remixed from:\n\nhttps://stat545.com/r-basics.html\nhttps://swcarpentry.github.io/r-novice-inflammation/13-supp-data-structures/\nhttps://slides.silviacanelon.com/tour-of-the-tidyverse-v2/\nhttps://www.heatherturner.net/teaching/zero-to-hero/\nhttp://adv-r.had.co.nz/Style.html"
  },
  {
    "objectID": "slides/01-foundations/02-data-wrangling/index.html#license",
    "href": "slides/01-foundations/02-data-wrangling/index.html#license",
    "title": "Data Types, Structures and Wrangling",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#overview",
    "href": "slides/01-foundations/03-programming/index.html#overview",
    "title": "Programming in R",
    "section": "Overview",
    "text": "Overview\n\nMore on data structures\nControl flow and iteration functions\nEfficient R programming\nWriting functions (basics)"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#intro",
    "href": "slides/01-foundations/03-programming/index.html#intro",
    "title": "Programming in R",
    "section": "Intro",
    "text": "Intro\nUnderstanding the basics of R programming helps to improve analysis/reporting scripts and extend what we can do with R.\nGood coding practice follows the DRY principle: Don’t Repeat Yourself. Rather than modifying copy-pasted code chunks, we might\n\nwrite a custom function\nuse loops or iteration functions to perform multiple similar tasks\n\nCustom functions can be used to provide convenient wrappers to complex code chunks as well as implement novel functionality."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#data-structures-revisited",
    "href": "slides/01-foundations/03-programming/index.html#data-structures-revisited",
    "title": "Programming in R",
    "section": "Data Structures Revisited",
    "text": "Data Structures Revisited\nFor basic data analysis, our data is usually imported and we use high-level functions (e.g. from dplyr) to handle it.\nFor programming, we need to work with lower-level data structures and be able to\n\ncreate basic objects\nextract components\ncoerce one data type to another\n\nWorking with base R functions when programming also helps avoid dependencies, which is useful when writing packages."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#vectors",
    "href": "slides/01-foundations/03-programming/index.html#vectors",
    "title": "Programming in R",
    "section": "Vectors",
    "text": "Vectors\nnumeric(), character() and logical() can be used to initialize vectors of the corresponding type for a given length\n\nx <- numeric(3)\nx\n\n[1] 0 0 0\n\n\nElements can be assigned by indexing the positions to be filled, e.g.\n\nx[1] <- 4 # assign 4 to 1st element\nx[-c(2, 3)] <- 4 # assign 4 to everying *except* 2nd and 3rd element\n\nThis is particularly useful when programming an iterative procedure.\nas.logical(), as.numeric() and as.character() coerce to the corresponding type, producing NAs if coercion fails."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#logical-vectors",
    "href": "slides/01-foundations/03-programming/index.html#logical-vectors",
    "title": "Programming in R",
    "section": "Logical Vectors",
    "text": "Logical Vectors\nLogical vectors are commonly used when indexing. The vector might be produced by a logical operator:\n\nx <- c(1, 1, 2, 2, 2)\nx > 1\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE\n\nx[x > 1]\n\n[1] 2 2 2\n\n\nduplicated() is also useful here:\n\nduplicated(x)\n\n[1] FALSE  TRUE FALSE  TRUE  TRUE\n\n!duplicated(x)\n\n[1]  TRUE FALSE  TRUE FALSE FALSE"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#numeric-vectors",
    "href": "slides/01-foundations/03-programming/index.html#numeric-vectors",
    "title": "Programming in R",
    "section": "Numeric Vectors",
    "text": "Numeric Vectors\nThe are several convenience function for creating numeric vectors, notably seq() and rep().\nAs they are so useful there are fast shortcuts for particular cases\n\nseq_len(4)\n\n[1] 1 2 3 4\n\nfruits <- c(\"apple\", \"pear\", \"banana\")\nseq_along(fruits) # a sequence from 1 to the length of x\n\n[1] 1 2 3\n\nrep.int(1:2, times = c(2, 3))\n\n[1] 1 1 2 2 2"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#character-vectors",
    "href": "slides/01-foundations/03-programming/index.html#character-vectors",
    "title": "Programming in R",
    "section": "Character Vectors",
    "text": "Character Vectors\nCharacter vectors may be used for creating names\n\nx <- 3:5\nnames(x) <- paste0(LETTERS[1:3], 1229:1231)\nx\n\nA1229 B1230 C1231 \n    3     4     5 \n\nnames(x)\n\n[1] \"A1229\" \"B1230\" \"C1231\"\n\n\nNames can be used as an alternative to numeric or logical vectors when indexing\n\nx[\"B1230\"]\n\nB1230 \n    4"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#matrices",
    "href": "slides/01-foundations/03-programming/index.html#matrices",
    "title": "Programming in R",
    "section": "Matrices",
    "text": "Matrices\nA matrix is in fact also a vector, with an attribute giving the dimensions of the matrix\n\ndefaultbyrow\n\n\n\nM <- matrix(1:6, 2, 3) # data, nrow, ncol\nM\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nstr(M)\n\n int [1:2, 1:3] 1 2 3 4 5 6\n\nattributes(M)\n\n$dim\n[1] 2 3\n\n\n\n\nThe byrow argument is also useful:\n\nN <- matrix(1:6, 2, 3, byrow = TRUE) # data, nrow, ncol\nN\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#matrix-functions",
    "href": "slides/01-foundations/03-programming/index.html#matrix-functions",
    "title": "Programming in R",
    "section": "Matrix functions",
    "text": "Matrix functions\nUseful functions for matrices include dim(), ncol(), nrow(), colnames() and rownames(). rbind() and cbind() can be used to row-bind or column-bind vectors.\nMatrices enable computation via matrix algebra as well as row/column-wise operations."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#lists",
    "href": "slides/01-foundations/03-programming/index.html#lists",
    "title": "Programming in R",
    "section": "Lists",
    "text": "Lists\nLists collect together items which may be different types or lengths. Like a vector, elements may be named.\n\nresults <- list(matrix = M, vector = x)\nresults\n\n$matrix\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n$vector\nA1229 B1230 C1231 \n    3     4     5 \n\n\nLists are often used to return the results of a function."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#indexing-lists",
    "href": "slides/01-foundations/03-programming/index.html#indexing-lists",
    "title": "Programming in R",
    "section": "Indexing lists",
    "text": "Indexing lists\nElements can be indexed by [ to return a list or [[ to return a single element, either by index or name:\n\nresults[\"vector\"] # returns a list\n\n$vector\nA1229 B1230 C1231 \n    3     4     5 \n\nresults[[2]] # returns a vector\n\nA1229 B1230 C1231 \n    3     4     5 \n\n\n$ can be used to extract elements by name:\n\nresults$vector # equivalent to results[[\"vector\"]]\n\nA1229 B1230 C1231 \n    3     4     5"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#data-frames",
    "href": "slides/01-foundations/03-programming/index.html#data-frames",
    "title": "Programming in R",
    "section": "Data Frames",
    "text": "Data Frames\nData frames are lists of variables of the same length and hence can often be treated as a matrix\n\nx <- 1:3\ndat <- data.frame(x = x, id = letters[1:3])\ndat\n\n  x id\n1 1  a\n2 2  b\n3 3  c\n\ndat[1]\n\n  x\n1 1\n2 2\n3 3\n\ndat[[1]]\n\n[1] 1 2 3\n\ndat[1, 2]\n\n[1] \"a\""
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#your-turn",
    "href": "slides/01-foundations/03-programming/index.html#your-turn",
    "title": "Programming in R",
    "section": "Your turn!",
    "text": "Your turn!\nThe lm function calls the “workhorse” function lm.fit to actually fit the model. Unlike lm, which works from a formula, lm.fit works from the model matrix and the response vector.\n\nDefine a response y containing 10 numeric values. Define an explanatory variable z of the numbers 1 to 10.\nUse the function cbind() to create a matrix x with 1s in the first column and z in the second column.\nFit a model using fit1 <- lm.fit(x, y). Use str to explore the structure of the results. Use $ to extract the coefficients.\nCreate a second fit using lm(y ~ z). Use names to compare the results. Check the coefficients of the second fit are the same."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#your-turn-a-solution",
    "href": "slides/01-foundations/03-programming/index.html#your-turn-a-solution",
    "title": "Programming in R",
    "section": "Your turn! (a solution)",
    "text": "Your turn! (a solution)\n\n# A possible solution\n\nset.seed(1)\ny <- sample(10)\nz <- 1:10\n\nx <- cbind(1, z) # we'll see this trick in a few slides time!\n\nfit1 <- lm.fit(x,y)\nstr(fit1)\nfit1$coefficients\n\nfit2 <- lm(y ~ z)\nnames(fit1)\nnames(fit2)\nfit2$coefficients"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#control-structures",
    "href": "slides/01-foundations/03-programming/index.html#control-structures",
    "title": "Programming in R",
    "section": "Control Structures",
    "text": "Control Structures\nControl structures are the commands that make decisions or execute loops.\nConditional execution: if/else, switch\nLoops: for, while, repeat"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#ifelse",
    "href": "slides/01-foundations/03-programming/index.html#ifelse",
    "title": "Programming in R",
    "section": "if/else",
    "text": "if/else\nAn if statement can stand alone or be combined with an else statement\n\nx <- 1:3\nif (all(x > 0)) {\n    res <- mean(x)\n} else {\n    res <- mean(abs(x))\n}\nres\n\n[1] 2\n\n\nThe condition must evaluate to logical vector of length one. The functions all(), any(), is.na(), is.null() and other is. functions are useful here."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#conditioning-on-equality",
    "href": "slides/01-foundations/03-programming/index.html#conditioning-on-equality",
    "title": "Programming in R",
    "section": "Conditioning on equality",
    "text": "Conditioning on equality\nUsing == may not be appropriate as it compares each element; identical() will test the whole object\n\nx <- y <- 1:2\nx == y\n\n[1] TRUE TRUE\n\nidentical(x, y)\n\n[1] TRUE\n\n\nall.equal() will allow for some numerical “fuzz”\n\nz <- sqrt(2)\nidentical(z * z, 2)\n\n[1] FALSE\n\nall.equal(z * z, 2)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#switch",
    "href": "slides/01-foundations/03-programming/index.html#switch",
    "title": "Programming in R",
    "section": "switch",
    "text": "switch\nThe switch() function provides a more readable alternative to nested if statements\n\nif (summary == \"IQR\") { \n    y <- IQR(x)\n} else {\n    if (summary == \"range\"){\n        y <- range(x)\n    } else y <- mean(x)\n}\n\n\nx <- 1:5\nswitch(\"range\", # can enter an arg name or position\n       IQR = IQR(x),\n       range = range(x),\n       mean(x))\n\n[1] 1 5\n\n\nThe final unnamed argument is the default.\nFurther examples"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#for",
    "href": "slides/01-foundations/03-programming/index.html#for",
    "title": "Programming in R",
    "section": "for",
    "text": "for\nA for loop repeats a chunk of code, iterating along the values of a vector or list\n\nx <- c(\"apple\", \"pear\")\nfor (nm in x) print(nm)\n\n[1] \"apple\"\n[1] \"pear\"\n\n\nUnassigned objects are not automatically printed; hence call to print(). This also applies to ggplot objects, which only display when printed.\n\nfor (i in seq_along(x)) {\n    message(\"Element \", i, \": \", x[i])\n}\n\nseq_along() is used here rather than 1:length(x) as length(x) may be zero. message is used to print messages to the console."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#while-and-repeat",
    "href": "slides/01-foundations/03-programming/index.html#while-and-repeat",
    "title": "Programming in R",
    "section": "while and repeat",
    "text": "while and repeat\nThe while loop repeats while a condition is TRUE\n\nn_iter <- 1\nwhile (n_iter < 3) {\n    x <- x * 2\n    n_iter <- n_iter + 1\n}\n\nThe repeat loop repeats until exited by break\n\nrepeat {\n    x <- x + 1\n    if (max(x) > 10) break\n}\n\nbreak can be used in for or while loops too.\nnext can be used to skip to the next iteration."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#iteration-functions",
    "href": "slides/01-foundations/03-programming/index.html#iteration-functions",
    "title": "Programming in R",
    "section": "Iteration functions",
    "text": "Iteration functions\nIteration functions provide a general alternative to for loops. They are not necessarily faster, but can be more compact.\napply() applies a function over rows/columns of a matrix.\nlapply(), sapply() and vapply() iterate over a list or vector. vapply() is recommended for programming as it specifies the type of return value\n\nvapply(list(a = 1:3, b = 1:6), FUN = mean, FUN.VALUE = numeric(1))\n\n  a   b \n2.0 3.5 \n\n\nmapply() iterates over two or more lists/vectors in parallel."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#iteration-function-resources",
    "href": "slides/01-foundations/03-programming/index.html#iteration-function-resources",
    "title": "Programming in R",
    "section": "Iteration function resources",
    "text": "Iteration function resources\n\nEfficient R by Colin Gillespie and Robin Lovelace\nThe built-in help pages. You can directly access the examples using the example() function, e.g. to run the apply() examples, use example(\"apply\").\nThis StackOverflow answer, describing when, where and how to use each of the functions.\nThis blog post by Neil Saunders"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#purrr",
    "href": "slides/01-foundations/03-programming/index.html#purrr",
    "title": "Programming in R",
    "section": "purrr",
    "text": "purrr\nThe purrr package (part of the tidyverse) provides alternatives to the apply family that have a simpler, more consistent interface with fixed type of return value.\n\n# Split a data frame into pieces, \n# fit a model to each piece, summarise and extract R^2\nlibrary(purrr)\n\nmtcars %>%\n  split(.$cyl) %>% # base R\n  map(~ lm(mpg ~ wt, data = .x)) %>% # returns a list\n  map(summary) %>%\n  map_dbl(\"r.squared\") # returns a vector\n\n        4         6         8 \n0.5086326 0.4645102 0.4229655"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#advantages-of-purrr",
    "href": "slides/01-foundations/03-programming/index.html#advantages-of-purrr",
    "title": "Programming in R",
    "section": "Advantages of purrr",
    "text": "Advantages of purrr\n\nThe first argument is always the data, so purrr works naturally with the pipe.\nAll purrr functions are type-stable. They always return the advertised output type (e.g. map() returns lists; map_dbl() returns double vectors), or they throw an error.\nAll map() functions either accept function, formulas (used for succinctly generating anonymous functions), a character vector (used to extract components by name), or a numeric vector (used to extract by position).\n\nSee the iteration chapter of R for Data Science for further examples and details"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#growing-objects",
    "href": "slides/01-foundations/03-programming/index.html#growing-objects",
    "title": "Programming in R",
    "section": "Growing Objects",
    "text": "Growing Objects\nAdding to an object in a loop, e.g. via c() or cbind()\n\nres <- NULL\nfor (i in 1:10000) res <- c(res, 1)\n\nforces a copy to be made at each iteration. THIS IS BAD!\nIt is far better to create an object of the necessary size first\n\nres <- numeric(10000)\nfor (i in seq_along(res)) res[i] <- 1\n\nTo initialise a list we can use\n\nres <- vector(mode = \"list\", length = 100)"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#benchmarking",
    "href": "slides/01-foundations/03-programming/index.html#benchmarking",
    "title": "Programming in R",
    "section": "Benchmarking",
    "text": "Benchmarking\nThere will usually be many ways to write code for a given task. To compare alternatives, we can benchmark the expression\n\nlibrary(rbenchmark)\nbenchmark({res <- NULL;\n           for (i in 1:10000) res <- c(res, 1)})$elapsed\n\n[1] 12.422\n\nbenchmark({res <- numeric(10000)\n           for (i in seq_along(res)) res[i] <- 1})$elapsed\n\n[1] 0.074\n\n\nNote the BIG difference between growing and initialising a vector (the latter around 150 times faster in this case)."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#for-loops-revisited",
    "href": "slides/01-foundations/03-programming/index.html#for-loops-revisited",
    "title": "Programming in R",
    "section": "for loops revisited",
    "text": "for loops revisited\nEach loop has three components:\n\nThe output: allocate sufficient space before you start the loop\nThe sequence: this determines what you loop over\nThe body: the code that does the work\n\nSee https://r4ds.had.co.nz/iteration.html#for-loops"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#vectorization",
    "href": "slides/01-foundations/03-programming/index.html#vectorization",
    "title": "Programming in R",
    "section": "Vectorization",
    "text": "Vectorization\nVectorization is operating on vectors (or vector-like objects) rather than individual elements.\nMany operations in R are vectorized, e.g.\n\nx <- 1:3\ny <- 3:1\nx == y\n\n[1] FALSE  TRUE FALSE\n\nlog(x)\n\n[1] 0.0000000 0.6931472 1.0986123\n\nres <- list(a = 1:3, b = 1:6)\nlengths(res)\n\na b \n3 6 \n\n\nWe do not need to loop through each element!"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#recycling",
    "href": "slides/01-foundations/03-programming/index.html#recycling",
    "title": "Programming in R",
    "section": "Recycling",
    "text": "Recycling\nVectorized functions will recycle shorter vectors to create vectors of the same length\n\n1:4 + 0:1 # 1+0, 2+1, 3+0, 4+1\n\n[1] 1 3 3 5\n\n\nThis is particularly useful for single values\n\ncbind(1, 3:4)\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    1    4\n\n\nand for generating regular patterns\n\npaste0(rep(1:3, each = 2), c(\"a\", \"b\"))\n\n[1] \"1a\" \"1b\" \"2a\" \"2b\" \"3a\" \"3b\""
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#your-turn-1",
    "href": "slides/01-foundations/03-programming/index.html#your-turn-1",
    "title": "Programming in R",
    "section": "Your turn!",
    "text": "Your turn!\n\nWrite a for loop to compute the mean of every column of in mtcars, saving each to a preallocated vector\nUse lapply() with rnorm to generate a list of length 10 where the 1st item contains a vector of 1 sample from an \\(N(0,1)\\) distribution, the 2nd item contains a vector of 2 samples from an \\(N(0,1)\\) distribution up to the 10th item contains a vector of 10 samples from an \\(N(0,1)\\) distibution.\nUse lapply() with rnorm to generate a list of length 10, where the 1st item contains a vector of 5 samples from \\(N(1,1)\\), the 2nd item contains a vector of 5 samples \\(N(2,1)\\) and so on until you get 5 samples from \\(N(10,1)\\)"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#your-turn-sample-solutions",
    "href": "slides/01-foundations/03-programming/index.html#your-turn-sample-solutions",
    "title": "Programming in R",
    "section": "Your turn! (sample solutions)",
    "text": "Your turn! (sample solutions)\n\nout <- numeric(ncol(mtcars))\n\nfor (i in seq_len(ncol(mtcars))) {\n  out[i] <- mean(mtcars[[i]])\n}\n\n\nlapply(1:10, rnorm)\n\n\nlapply(1:10, rnorm, n = 5)"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#vectorization-and-matrices",
    "href": "slides/01-foundations/03-programming/index.html#vectorization-and-matrices",
    "title": "Programming in R",
    "section": "Vectorization and Matrices",
    "text": "Vectorization and Matrices\nVectorizations applies to matices too, not only through matrix algebra\n\nM <- matrix(1:4, nrow = 2, ncol = 2)\nM + M\n\n     [,1] [,2]\n[1,]    2    6\n[2,]    4    8\n\n\nbut also vectorized functions\n\nM <- M + .3\nround(M)\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#matrices-and-recycling",
    "href": "slides/01-foundations/03-programming/index.html#matrices-and-recycling",
    "title": "Programming in R",
    "section": "Matrices and Recycling",
    "text": "Matrices and Recycling\nValues are recycled down matrix, which is convenient for row-wise operations\n\nM <- matrix(1:6, nrow = 2, ncol = 3)\nM\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nM - 1:2\n\n     [,1] [,2] [,3]\n[1,]    0    2    4\n[2,]    0    2    4\n\n\nTo do the same for columns we would need to explicitly replicate, which is not so efficient.\n\nM - rep(1:3, each = 2)\n\n     [,1] [,2] [,3]\n[1,]    0    1    2\n[2,]    1    2    3"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#vectorization-vs-for-loop",
    "href": "slides/01-foundations/03-programming/index.html#vectorization-vs-for-loop",
    "title": "Programming in R",
    "section": "Vectorization vs For Loop",
    "text": "Vectorization vs For Loop\nOperations that can be vectorized will be more efficient than a loop in R\n\nM <- matrix(1:100000, nrow = 200, ncol = 500)\nx <- 1:200\nbenchmark({for (i in 1:200){\n             for (j in 1:500){\n               M[i, j] <- M[i, j] - x[i]\n             }\n           }})$elapsed\n\n[1] 0.657\n\nbenchmark({M - x})$elapsed\n\n[1] 0.024\n\n\nThe latter is nearly 30 times faster!"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#rowcolumn-wise-operations",
    "href": "slides/01-foundations/03-programming/index.html#rowcolumn-wise-operations",
    "title": "Programming in R",
    "section": "Row/Column-wise Operations",
    "text": "Row/Column-wise Operations\nSeveral functions are available implementing efficient row/column-wise operations, e.g. colMeans(), rowMeans(), colSums(), rowSums(), sweep()\n\nM <- matrix(1:4, nrow = 2, ncol = 2)\nrowMeans(M)\n\n[1] 2 3\n\n\nThese provide an alternative to iterating though rows and columns in R (the iteration happens in C, which is faster).\nThe matrixStats provides further “matricised” methods."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#top-tips-for-efficient-programming",
    "href": "slides/01-foundations/03-programming/index.html#top-tips-for-efficient-programming",
    "title": "Programming in R",
    "section": "Top tips for efficient programming",
    "text": "Top tips for efficient programming\nA golden rule in R programming is to access the underlying C/Fortran routines as quickly as possible; the fewer functions calls required to achieve this, the better.\n\nBe careful never to grow vectors\nVectorise code wherever possible\n\nSee Efficient Programming for more details and examples."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#components-of-a-function",
    "href": "slides/01-foundations/03-programming/index.html#components-of-a-function",
    "title": "Programming in R",
    "section": "Components of a function",
    "text": "Components of a function\nFunctions are defined by three components:\n\nthe name of the function\nthe arguments of the function, inside ( )\nthe body of the function that computes the result, inside { }\n\nThey are created using function()\n\nt_statistic <- function(n) {\n    x <- rnorm(n)\n    y <- rnorm(n)\n    t.test(x, y)$statistic\n}"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#naming-functions",
    "href": "slides/01-foundations/03-programming/index.html#naming-functions",
    "title": "Programming in R",
    "section": "Naming Functions",
    "text": "Naming Functions\nAs with arguments, function names are important:\n\nuse a name that describes what it returns (e.g. t_statistic) or what it does (e.g. remove_na)\ntry to use one convention for combining words (e.g. snake case t_statistic or camel case tStatistic)\navoid using the same name as other functions"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#specified-arguments",
    "href": "slides/01-foundations/03-programming/index.html#specified-arguments",
    "title": "Programming in R",
    "section": "Specified Arguments",
    "text": "Specified Arguments\nspecified arguments are those named in the function definition, e.g.  in rnorm()\n\nargs(rnorm)\n\nfunction (n, mean = 0, sd = 1) \nNULL\n\n\nthe arguments are n, mean and sd.\nmean and sd have been given default values in the function definition, but n has not, so the function fails if the user does not pass a value to n\n\nrnorm()\n\nError in rnorm(): argument \"n\" is missing, with no default"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#name-and-order-of-arguments",
    "href": "slides/01-foundations/03-programming/index.html#name-and-order-of-arguments",
    "title": "Programming in R",
    "section": "Name and Order of Arguments",
    "text": "Name and Order of Arguments\nThe user can pass objects to these arguments using their names or by supplying unnamed values in the right order\n\nrnorm(5, 1, 10)\n\n[1]   5.612356  -1.171092  21.085566 -20.008246  -4.985594\n\nrnorm(5, sd = 10)\n\n[1]  -0.2803568 -10.7413311  12.7091410  -4.0280981   7.8755869\n\n\nSo naming and order is important! Some guidelines\n\nput compulsory arguments first, e.g. data\nput rarely used arguments last, e.g. tolerance setting\nuse short but meaningful argument names\nif relevant, use the same argument names as similar functions"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#using-arguments",
    "href": "slides/01-foundations/03-programming/index.html#using-arguments",
    "title": "Programming in R",
    "section": "Using Arguments",
    "text": "Using Arguments\nArguments are used as objects in the function code.\nAn new environment is created each time the function is called, separate from the global workspace.\n\nx <- 1\ny <- 3\nf <- function(x, y){\n    a <- 1\n    x <- x + a\n    x + y\n}\nf(x, y)\n\n[1] 5\n\nx\n\n[1] 1\n\na\n\nError in eval(expr, envir, enclos): object 'a' not found"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#lexical-scoping",
    "href": "slides/01-foundations/03-programming/index.html#lexical-scoping",
    "title": "Programming in R",
    "section": "Lexical Scoping",
    "text": "Lexical Scoping\nIf an object is not defined within the function, or passed in as an argument, R looks for it in the parent environment where the function was defined\n\nx <- 1\ny <- 3\nf <- function(x){\n    x + y\n}\nf(x)\n\n[1] 4\n\nrm(y)\nf(x)\n\nError in f(x): object 'y' not found\n\n\nIt is safest (and best practice) to use arguments rather than depend on global variables!"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#return-values-single",
    "href": "slides/01-foundations/03-programming/index.html#return-values-single",
    "title": "Programming in R",
    "section": "Return Values (single)",
    "text": "Return Values (single)\nBy default, functions return the object created by the last line of code\n\nf <- function(x) {\n    x <- x + 1\n    log(x)\n}\n\nAlternatively return() can be used to terminate the function and return a given object\n\nf <- function(x) {\n    if (all(x > 0)) return(log(x))\n    x[x <= 0] <- 0.1\n    log(x)\n}"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#return-values-multiple",
    "href": "slides/01-foundations/03-programming/index.html#return-values-multiple",
    "title": "Programming in R",
    "section": "Return values (multiple)",
    "text": "Return values (multiple)\nMultiple objects can be returned in a list:\n\nmean_and_sd <- function(x) {\n  res_mean <- mean(x, na.rm = TRUE)\n  res_sd <- sd(x)\n  \n  list(mean = res_mean,\n       sd = res_sd)\n}\n\nx <- 1:3\nmean_and_sd(x)\n\n$mean\n[1] 2\n\n$sd\n[1] 1"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#your-turn-2",
    "href": "slides/01-foundations/03-programming/index.html#your-turn-2",
    "title": "Programming in R",
    "section": "Your turn!",
    "text": "Your turn!\nWrite your own function, variance, to compute the variance of a numeric vector:\n\\[\nVar(x) = \\frac{1}{n-1}\\sum_{i=1}^n(x_i - \\bar{x})^2\n\\]\nMake use of R’s built in vectorisation.\nTest it and compare your answer with the built-in var() function."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#your-turn-a-solution-1",
    "href": "slides/01-foundations/03-programming/index.html#your-turn-a-solution-1",
    "title": "Programming in R",
    "section": "Your turn! (a solution)",
    "text": "Your turn! (a solution)\n\nvariance <- function(x) {\n  1/(length(x) - 1) * sum((x - mean(x))^2)\n}"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#resources",
    "href": "slides/01-foundations/03-programming/index.html#resources",
    "title": "Programming in R",
    "section": "Resources",
    "text": "Resources\nMaterial (very largely) inspired by and remixed from:\n\nHeather Turner and Erlap Dogu’s R Programming slides (with permission)\n\nAdditionally:\n\nEfficient R, Chapter 3 by Colin Gillespie and Robin Lovelace\nR for Data Science, by Hadley Wickham and Garrett Grolemund, chapters on iteration and functions"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#license",
    "href": "slides/01-foundations/03-programming/index.html#license",
    "title": "Programming in R",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#unspecified-arguments",
    "href": "slides/01-foundations/03-programming/index.html#unspecified-arguments",
    "title": "Programming in R",
    "section": "Unspecified Arguments",
    "text": "Unspecified Arguments\n... or the ellipsis allow unspecified arguments to be passed to the function.\nThis device is used by functions that work with arbitrary numbers of objects, e.g. \n\nargs(sum)\n\nfunction (..., na.rm = FALSE) \nNULL\n\nsum(1, 4, 10, 2)\n\n[1] 17\n\n\nIt can also be used to pass on arguments to another function, e.g.\n\nt_statistic <- function(x, g, ...) {\n    t.test(x ~ g, ...)$stat\n}"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#using-...",
    "href": "slides/01-foundations/03-programming/index.html#using-...",
    "title": "Programming in R",
    "section": "Using ...",
    "text": "Using ...\nArguments passed to ... can be collected into a list for further analysis\n\nmeans <- function(...){\n    dots <- list(...)\n    vapply(dots, mean, numeric(1), na.rm = TRUE)\n}\nx <- 1\ny <- 2:3\nmeans(x, y)\n\n[1] 1.0 2.5\n\n\nSimilarly the objects could be concatenated using c()"
  },
  {
    "objectID": "slides/01-foundations/03-programming/index.html#side-effects",
    "href": "slides/01-foundations/03-programming/index.html#side-effects",
    "title": "Programming in R",
    "section": "Side Effects",
    "text": "Side Effects\nA side-effect is a change outside the function that occurs when the function is run, e.g.\n\nplot to the graphics window or other device\nprinting output to the console\nwrite data to a file\n\nA function can have many side-effects and a return value, but it is best practice to have a separate function for each task, e.g creating a plot or a table.\nWriting to file is usually best done outside a function."
  },
  {
    "objectID": "slides/02-advanced/04-profiling/index.html#overview",
    "href": "slides/02-advanced/04-profiling/index.html#overview",
    "title": "Profiling",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/02-advanced/04-profiling/index.html#resources",
    "href": "slides/02-advanced/04-profiling/index.html#resources",
    "title": "Profiling",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/04-profiling/index.html#license",
    "href": "slides/02-advanced/04-profiling/index.html#license",
    "title": "Profiling",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/02-advanced/00-template/index.html#overview",
    "href": "slides/02-advanced/00-template/index.html#overview",
    "title": "TITLE",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/02-advanced/00-template/index.html#resources",
    "href": "slides/02-advanced/00-template/index.html#resources",
    "title": "TITLE",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/00-template/index.html#license",
    "href": "slides/02-advanced/00-template/index.html#license",
    "title": "TITLE",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#overview",
    "href": "slides/02-advanced/01-git/index.html#overview",
    "title": "Open code, git and GitHub",
    "section": "Overview",
    "text": "Overview\n\nOpen code and software\ngit\nGitHub\ngit and GitHub with RStudio"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#open-practices",
    "href": "slides/02-advanced/01-git/index.html#open-practices",
    "title": "Open code, git and GitHub",
    "section": "Open practices",
    "text": "Open practices\n\n\nRecognised as integral to healthy research culture\nWorking openly means that our work is\n\nAccessible, for free\nOpen to scrutiny (verifiable)\nReproducible\n\n\n (source: analogicus from Pexels)"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#code-and-software",
    "href": "slides/02-advanced/01-git/index.html#code-and-software",
    "title": "Open code, git and GitHub",
    "section": "Code and Software",
    "text": "Code and Software\n\n\nScripts: e.g analysis/simulation\n\nCustomised\nReproducible workflow\n\nread data\nanalyse\nsummarise\nreport\n\n\n\nSoftware: Package, tool, dashboard\n\nOptimized\nReusable\nSharable"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#why-share-code-and-software",
    "href": "slides/02-advanced/01-git/index.html#why-share-code-and-software",
    "title": "Open code, git and GitHub",
    "section": "Why share code and software?",
    "text": "Why share code and software?\nBeyond general benefits of open practices\n\nIncreased impact and reputation\nFaster translation into practice\nAdditional, citable, outputs\n\nBenefits of coding in the open\n\nEncourages good practices\nFacilitates collaboration\nCan give access to software engineering tools"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#sharing-code-in-an-online-repository",
    "href": "slides/02-advanced/01-git/index.html#sharing-code-in-an-online-repository",
    "title": "Open code, git and GitHub",
    "section": "Sharing code in an online repository",
    "text": "Sharing code in an online repository\n\n\nPros\n\nVersion control (commit history + releases)\nREADME.md for quick documentation\nFacilitates contribution (bug reports, patches)\nCan use CITATION.cff file for clear citation GitHub\nLinks to Zenodo for publishing releases\n\nCons\n\nLearning curve to take full advantage"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#further-benefits-of-github",
    "href": "slides/02-advanced/01-git/index.html#further-benefits-of-github",
    "title": "Open code, git and GitHub",
    "section": "Further benefits of GitHub",
    "text": "Further benefits of GitHub\nResearch compendia\nPotential to use Binder to so that people can run your code in the browser\n\nFor short analysis (<10 min) on small data (< 10MB)\nZero to Binder tutorial [Julia, Python, R]\n\nSoftware packages\n\nUsers can install Julia/Python/R packages from GitHub\nCan deploy package websites using GitHub pages\nCan benefit from GitHub Actions, e.g. automatically running tests"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#more-on-open-code-and-software",
    "href": "slides/02-advanced/01-git/index.html#more-on-open-code-and-software",
    "title": "Open code, git and GitHub",
    "section": "More on open code and software",
    "text": "More on open code and software\nSee https://www.heatherturner.net/talks/gregynog2022/#1"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#version-control",
    "href": "slides/02-advanced/01-git/index.html#version-control",
    "title": "Open code, git and GitHub",
    "section": "Version Control",
    "text": "Version Control\nWhen developing code, we often want to keep old versions.\nWe might save with different files names\ncode                               \n  ¦--simulations.R                  \n  ¦--simulations_correct_sd.R       \n  ¦--simulations_return_parameters.R\nor comment on changes (especially when collaborating with others)\n\n## EK 2023-01-10 use geom_bar instead of geom_histogram\n## p <- p + geom_histogram(stat = \"identity\")\np <- p + geom_bar(stat = \"identity\")\n## HT 2023-01-09 remove legend from plot\np <- p + theme(legend.position = \"none\")\n\nEither way it can get messy and hard to track/revert changes!"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#git-1",
    "href": "slides/02-advanced/01-git/index.html#git-1",
    "title": "Open code, git and GitHub",
    "section": "git",
    "text": "git\ngit is a version control system that allows us to record changes made to files in a repository or repo.\nEach version has a unique ID and metadata:\n\nWho created the new version\nA short description of changes made\nWhen the version was made\n\nVersions can be compared, restored and merged."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#git-repository",
    "href": "slides/02-advanced/01-git/index.html#git-repository",
    "title": "Open code, git and GitHub",
    "section": "git repository",
    "text": "git repository\nTo get started, a repository must be created locally (within a working directory on your computer) or on a remote hosting platform (we’ll use GitHub).\ngit can then track when files/folders are\n\nAdded\nModified\nDeleted\n\nRepositories can have multiple branches of development. We will work on a single branch, with the default name of main."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#staging-and-committing",
    "href": "slides/02-advanced/01-git/index.html#staging-and-committing",
    "title": "Open code, git and GitHub",
    "section": "Staging and committing",
    "text": "Staging and committing\nVersions are created in a commit.\nWe prepare the commit by staging changes we want to record:\n\nUntracked files (git treats the whole content as new)\nTracked files that have been modified or deleted since the last commit\n\nThink of it like taking photographs: we stage the scene by adding/removing people, or changing people’s outfits, when we have a scene we want to save we take a photograph."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#git-github",
    "href": "slides/02-advanced/01-git/index.html#git-github",
    "title": "Open code, git and GitHub",
    "section": "git + Github",
    "text": "git + Github\n\n\nThe full power comes by connecting a local repo to GitHub.\n\nYou can make changes locally and push them to GitHub\nYou can make changes via the GitHub website and later pull them into your local copy.\nCollaborators can also push/pull changes to the repo."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#github-1",
    "href": "slides/02-advanced/01-git/index.html#github-1",
    "title": "Open code, git and GitHub",
    "section": "GitHub",
    "text": "GitHub\nWarwick GitHub Enterprise: https://github.warwick.ac.uk/\n\nUse for Warwick-specific, private projects\nUsername will be ITS username\n\nGitHub: https://github.com/\n\nFree version allows private/public projects\nCan share/collaborate with people outside Warwick\nDevelop your personal portfolio"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#features",
    "href": "slides/02-advanced/01-git/index.html#features",
    "title": "Open code, git and GitHub",
    "section": "Features",
    "text": "Features\nGitHub repositories have some nice features:\n\nREADME.md displayed as HTML\nBrowsable commit history\nIssues where you/others can note bug reports/TODO/feature requests\nPull requests (advanced) where you/others can propose changes to the code to be reviewed\nActions (advanced) automated actions when you commit to the repo\nProjects (advanced) to organize issues (To Do/In Progress/Done)\nWiki for project documentation\nDeploy websites with pages"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#your-turn-explore-some-github-repositories",
    "href": "slides/02-advanced/01-git/index.html#your-turn-explore-some-github-repositories",
    "title": "Open code, git and GitHub",
    "section": "Your turn! Explore some GitHub repositories",
    "text": "Your turn! Explore some GitHub repositories\n\nThis course website and slides\n{palmerpenguins}\nR development guide"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#your-turn-create-a-github-repository",
    "href": "slides/02-advanced/01-git/index.html#your-turn-create-a-github-repository",
    "title": "Open code, git and GitHub",
    "section": "Your turn! Create a GitHub repository",
    "text": "Your turn! Create a GitHub repository\n\nLogin or sign up for a free account at https://www.github.com.\n\nRecommend to use personal email\nUsername recommendations:\n\nIncorporate your actual name\nReuse your username from other contexts.\nUse a name you can share in professional contexts.\nUse all lower case letters.\n\n\nClick on + in the top right to create a new, public, repository called github-intro.\n\nChoose to initialize the repository with a README file"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#your-turn-edit-on-github",
    "href": "slides/02-advanced/01-git/index.html#your-turn-edit-on-github",
    "title": "Open code, git and GitHub",
    "section": "Your turn! Edit on GitHub",
    "text": "Your turn! Edit on GitHub\n\n\nClick the pencil icon on the README.md file to edit.\n\nUpdate the title\nAdd some example content using markdown syntax\nUse the “Preview changes” tab to check your edits\n\nScroll down to the Commit changes section\n\nAdd a short description of your changes in the first dialog box, e.g. add basic information to README\nClick the green Commit changes button\nThis will stage and commit the file in one go.\n\nView the commit history (look for clock icon with anti-clockwise arrow) and look at the diff for your commit.\n\nSee Basic writing and formatting syntax for more on editing markdown."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#your-turn-continue-experimenting",
    "href": "slides/02-advanced/01-git/index.html#your-turn-continue-experimenting",
    "title": "Open code, git and GitHub",
    "section": "Your turn! Continue experimenting",
    "text": "Your turn! Continue experimenting\nFurther exercises to do while other people set up authentication.\n\nTry uploading a picture from Unsplash. Go to Add file > Upload files. Edit your README to add the image.\nGo to Add file > Create new file. Type subfolder/ in the “Name your file box” to create a subfolder. Now type README.md in the “Name your file box”. Add some content to the README and commit - try some new markdown syntax, e.g. emoji or a table.\nBuild a stunning README for your GitHub profile"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#using-git-locally",
    "href": "slides/02-advanced/01-git/index.html#using-git-locally",
    "title": "Open code, git and GitHub",
    "section": "Using git locally",
    "text": "Using git locally\nCheck if you already have git by running the following command in a terminal (e.g. Terminal tab on RStudio).\nOn MacOS/Linux (or Windows with Rtools)\n\nwhich git\n\nOn Windows\n\nwhere git\n\nMacOS: If asked to install the Xcode command line tools, say yes - this will install git."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#installing-git",
    "href": "slides/02-advanced/01-git/index.html#installing-git",
    "title": "Open code, git and GitHub",
    "section": "Installing git",
    "text": "Installing git\nWindows:\n\nUse the installer from https://git-scm.com/downloads\nCheck RStudio can find the git executable\n\nGo to Tools > Global Options > Git/SVN to check\nRestart RStudio before trying to use git\n\n\nLinux:\n\nsudo apt-get install git\n\nor\n\nsudo yum install git"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#configure-git-globally",
    "href": "slides/02-advanced/01-git/index.html#configure-git-globally",
    "title": "Open code, git and GitHub",
    "section": "Configure git (globally)",
    "text": "Configure git (globally)\nSet the default name and email to associate with your git commits:\nlibrary(usethis)\nuse_git_config(\n  user.name = \"Ada Lovelace\",     # your full name\n  user.email = \"ada@example.com\"  # email associated with GitHub account\n  )\nTo keep your email private:\n\nGo to https://github.com/settings/emails, select “Keep my email address private” and “Block command line pushes that expose my email” options\nConfigure git to use the address provided of the form ID+username@users.noreply.github.com"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#authentication",
    "href": "slides/02-advanced/01-git/index.html#authentication",
    "title": "Open code, git and GitHub",
    "section": "Authentication",
    "text": "Authentication\nGitHub requires authentication with a Personal Access Token or SSH key.\n\n\n\nSSH keys\nPAT\n\n\n\n\nMore setup (on Windows)\nusethis helpers\n\n\nOnce per computer+host\nRenew every 30 days (recommended)\n\n\nNeed for HPC\nNeed for usethis/other R packages\n\n\n\nRecommend: PAT now (easier), SSH later if needed"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#main-recommendations",
    "href": "slides/02-advanced/01-git/index.html#main-recommendations",
    "title": "Open code, git and GitHub",
    "section": "Main recommendations",
    "text": "Main recommendations\nFrom {usethis} vignette Managing Git(Hub) Credentials:\nOur main recommendations are:\n\nAdopt HTTPS as your Git transport protocol.\nTurn on two-factor authentication for your GitHub account.\nUse a personal access token (PAT) for all Git remote operations from the command line or from R.\nAllow tools to store and retrieve your credentials from the Git credential store. If you have previously set your GitHub PAT in .Renviron, stop doing that.\n\nHighly recommend reading this entire vignette and following all guidance"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#sitrep-and-vaccinate",
    "href": "slides/02-advanced/01-git/index.html#sitrep-and-vaccinate",
    "title": "Open code, git and GitHub",
    "section": "sitrep and vaccinate",
    "text": "sitrep and vaccinate\n\nlibrary(usethis) # make sure > v2.0.0\ngit_sitrep() # current situation report\ngit_vaccinate() # add files to global .gitignore (best practice)"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#get-a-personal-access-token-pat",
    "href": "slides/02-advanced/01-git/index.html#get-a-personal-access-token-pat",
    "title": "Open code, git and GitHub",
    "section": "Get a personal access token (PAT)",
    "text": "Get a personal access token (PAT)\nFirst, make sure you’re signed into GitHub. Then run\n\nusething::create_github_token()\n\n\nAdd Note describing use-case (e.g. personal-macbook-pro-2021, project-xyz)\nSelect expiration (recommend default 30 days)\nCheck scope\nClick ‘Generate Token’\nImportant! Copy token to clipboard, do not close window until stored!\nYou may want to store token in a secure vault, like 1Passward"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#put-your-pat-into-the-local-git-credential-store",
    "href": "slides/02-advanced/01-git/index.html#put-your-pat-into-the-local-git-credential-store",
    "title": "Open code, git and GitHub",
    "section": "Put your PAT into the local Git credential store",
    "text": "Put your PAT into the local Git credential store\nAssume token is on your clipboard\n\ngitcreds::gitcreds_set()\n\n\nIf you don’t have a PAT stored, will prompt you to enter: paste!\nIf you do, you will be given a choice to keep/replace/see the password\n\nchoose as appropriate\nif replacing, paste!"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#pat-maintenance",
    "href": "slides/02-advanced/01-git/index.html#pat-maintenance",
    "title": "Open code, git and GitHub",
    "section": "PAT maintenance",
    "text": "PAT maintenance\n\nBy default token will expire after 30 days.\nReturn to https://github.com/settings/tokens and click on its Note\n\nor else click on link in e-mail telling you token is about to expire!\n\nRegenerate token\nrerun gitcreds::gitcreds_set()\n\nA bit of a pain to do this every month, but only takes a couple of minutes."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#your-turn",
    "href": "slides/02-advanced/01-git/index.html#your-turn",
    "title": "Open code, git and GitHub",
    "section": "Your turn!",
    "text": "Your turn!\nIf you need to, generate and store a PAT, as described over last few slides and in the vignette.\nIf you already have a PAT set, read the vignette and follow through on other best pracice recommendations."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#create-an-rstudio-project-from-a-github-repo",
    "href": "slides/02-advanced/01-git/index.html#create-an-rstudio-project-from-a-github-repo",
    "title": "Open code, git and GitHub",
    "section": "Create an RStudio project from a GitHub repo",
    "text": "Create an RStudio project from a GitHub repo\nNow you can clone your GitHub repo locally.\n\nGo to your repo homepage on GitHub. Click the green “Code” button, copy the HTTPS address (of the form https://github.com/USERNAME/REPO.git).\nIn RStudio, go to File > New Project… > Version Control > Git.\n\nEnter the repo URL you just copied. The project directory name will be filled automatically.\nBrowse to a location you want the project directory to be created.\nClick Create Project."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#summary",
    "href": "slides/02-advanced/01-git/index.html#summary",
    "title": "Open code, git and GitHub",
    "section": "Summary",
    "text": "Summary\n\nWorking openly encourages good practices\nYour code/software is an asset!\nWe can make steps to improve our own practice\ngit and GitHub are invaluable resources for version control and collaboration"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#resources",
    "href": "slides/02-advanced/01-git/index.html#resources",
    "title": "Open code, git and GitHub",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#license",
    "href": "slides/02-advanced/01-git/index.html#license",
    "title": "Open code, git and GitHub",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/02-advanced/06-classes-methods/index.html#overview",
    "href": "slides/02-advanced/06-classes-methods/index.html#overview",
    "title": "Classes and Methods",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/02-advanced/06-classes-methods/index.html#resources",
    "href": "slides/02-advanced/06-classes-methods/index.html#resources",
    "title": "Classes and Methods",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/06-classes-methods/index.html#license",
    "href": "slides/02-advanced/06-classes-methods/index.html#license",
    "title": "Classes and Methods",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/02-advanced/02-functions/index.html#overview",
    "href": "slides/02-advanced/02-functions/index.html#overview",
    "title": "Functions",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/02-advanced/02-functions/index.html#resources",
    "href": "slides/02-advanced/02-functions/index.html#resources",
    "title": "Functions",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/02-functions/index.html#license",
    "href": "slides/02-advanced/02-functions/index.html#license",
    "title": "Functions",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/02-advanced/03-memory-parallel/index.html#overview",
    "href": "slides/02-advanced/03-memory-parallel/index.html#overview",
    "title": "Memory and Parallelisation",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/02-advanced/03-memory-parallel/index.html#resources",
    "href": "slides/02-advanced/03-memory-parallel/index.html#resources",
    "title": "Memory and Parallelisation",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/03-memory-parallel/index.html#license",
    "href": "slides/02-advanced/03-memory-parallel/index.html#license",
    "title": "Memory and Parallelisation",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "slides/02-advanced/05-C++/index.html#overview",
    "href": "slides/02-advanced/05-C++/index.html#overview",
    "title": "C++ and Rcpp",
    "section": "Overview",
    "text": "Overview\n\nWhat we’re covering"
  },
  {
    "objectID": "slides/02-advanced/05-C++/index.html#resources",
    "href": "slides/02-advanced/05-C++/index.html#resources",
    "title": "C++ and Rcpp",
    "section": "Resources",
    "text": "Resources\nMaterial inspired by and remixed from:"
  },
  {
    "objectID": "slides/02-advanced/05-C++/index.html#license",
    "href": "slides/02-advanced/05-C++/index.html#license",
    "title": "C++ and Rcpp",
    "section": "License",
    "text": "License\nLicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0)."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Sessions will be held most Mondays in term time, from 9:30-11:00 in Term 2 for the Advanced R Course.\nAdd the Advanced R Course to your calendar (this link does not work in Safari, Internet Explorer, or Opera Mini)\nPlease use the links in the sidebar to navigate to the full schedule for each term.\nNote that these are all subject to change."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#git-tab",
    "href": "slides/02-advanced/01-git/index.html#git-tab",
    "title": "Open code, git and GitHub",
    "section": "Git tab",
    "text": "Git tab\nA Git tab is added to the pane that is in the top right by default, usually with Environment, History, and Connections tabs.\nThe initial view is equivalent to the output of the terminal command git status.\n\n\nWe can stage changes to commit\n Underlying command:\ngit add <file/folder>.\n\nThen commit a set of changes\n Underlying command:\ngit commit -m \"commit message\""
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#gitignore",
    "href": "slides/02-advanced/01-git/index.html#gitignore",
    "title": "Open code, git and GitHub",
    "section": ".gitignore",
    "text": ".gitignore\nAt this stage you should see two untracked files in your Git Pane that were created when setting up the project: an .Rproj file and a .gitignore file.\nThe .gitignore file specifies files that git should ignore - they won’t appear in the git pane even as untracked files.\nExamples of how to specify files in .gitignore:\n\nSingle file: .Rhistory\nFile pattern: *.log (all files with .log extension)\nDirectory (and files in it): /dirname/\n\nThe .gitignore file must at least be staged to have an effect."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#first-commit-from-rstudio",
    "href": "slides/02-advanced/01-git/index.html#first-commit-from-rstudio",
    "title": "Open code, git and GitHub",
    "section": "First commit from RStudio",
    "text": "First commit from RStudio\n\nStage and commit the .Rproj file and .gitignore file, with the message “setup RStudio project”.\nClick on the clock icon in the Git pane to view the history of previous commits.\nClose the “Review Changes” window. Now click the green up arrow to push your changes to GitHub.\nGo to the repo on GitHub and verify your changes have been pushed."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#pulling-changes-from-github",
    "href": "slides/02-advanced/01-git/index.html#pulling-changes-from-github",
    "title": "Open code, git and GitHub",
    "section": "Pulling changes from GitHub",
    "text": "Pulling changes from GitHub\n\nEdit the README once more on GitHub in a new commit.\nBack in RStudio, on the Git tab, click the blue down arrow to pull the changes from GitHub\nThe changes to README should now appear in your local copy"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#avoid-conflicts",
    "href": "slides/02-advanced/01-git/index.html#avoid-conflicts",
    "title": "Open code, git and GitHub",
    "section": "Avoid conflicts",
    "text": "Avoid conflicts\nIf you work on both the local and GitHub copy, it’s possible to get out of sync and end up with conflicting versions of the same file.\nIt is possible to fix this, but it can be tricky/confusing. It’s best to avoid problem in first place!\nRecommended practice:\n\nAlways commit and push changes at the end of an RStudio session\nAlways pull changes at the beginning of an RStudio session"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#set-.rprofile-to-check-git-status",
    "href": "slides/02-advanced/01-git/index.html#set-.rprofile-to-check-git-status",
    "title": "Open code, git and GitHub",
    "section": "Set .Rprofile to check git status",
    "text": "Set .Rprofile to check git status\nThis is a neat trick (credit: Lisa De Bruine)\nOpen your .Rprofile\nusethis::edit_r_profile()\nand add the following (credit: Lisa De Bruine)\ncat(cli::col_blue(system(\"git status -u no\", TRUE)))\nThis will run git status from the command line when you start R, giving a (blue coloured!) message e.g.\nOn branch main Your branch is behind 'origin/main' by 1 commit,\nand can be fast-forwarded.   (use \"git pull\" to update your  \nlocal branch)  nothing to commit, working tree clean\nIf your main branch is behind the main branch on origin (GitHub), you should pull changes before making new edits."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#advanced-amend-commit-before-pushing",
    "href": "slides/02-advanced/01-git/index.html#advanced-amend-commit-before-pushing",
    "title": "Open code, git and GitHub",
    "section": "Advanced: Amend commit (before pushing)",
    "text": "Advanced: Amend commit (before pushing)\nSometimes we don’t stage everything we intended to include in a commit, e.g. we committed a file before saving the latest changes.\nIf we haven’t yet pushed the commit to GitHub, simply stage the extra commits and check the “Amend previous commit” box under the commit message.\nThe original commit message will be shown - you can edit this to change the message for the amended commit (useful if you forgot to reference a GitHub issue number)"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#advanced-undo-last-commit-before-pushing",
    "href": "slides/02-advanced/01-git/index.html#advanced-undo-last-commit-before-pushing",
    "title": "Open code, git and GitHub",
    "section": "Advanced: Undo last commit (before pushing)",
    "text": "Advanced: Undo last commit (before pushing)\nAlternatively, you can undo a commit before pushing.\nTo undo the commit, keeping files as they are\n\ngit reset HEAD~1\n\n(change the 1 to a higher number to go back more than 1 commit).\nTo undo the commit and all the changes in that commit\n\ngit reset --hard HEAD~1\n\nThis goes back to the version at the last commit."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#advanced-undo-last-commit-after-pushing",
    "href": "slides/02-advanced/01-git/index.html#advanced-undo-last-commit-after-pushing",
    "title": "Open code, git and GitHub",
    "section": "Advanced: Undo last commit (after pushing)",
    "text": "Advanced: Undo last commit (after pushing)\nIt is best practice to create a new commit that undoes the changes. Run\n\ngit revert HEAD\n\nThis edits the files to undo the changes in your last commit. You should then commit these edits, with a relevant message.\nIt is possible to use git reset --hard to undo a commit and then git push origin main --force to force this change onto GitHub. Sometimes repository maintainers do not allow this as it rewrites the history, which can cause problems for people that have cloned or forked your repo."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#general-workflow",
    "href": "slides/02-advanced/01-git/index.html#general-workflow",
    "title": "Open code, git and GitHub",
    "section": "General workflow",
    "text": "General workflow\n\nCommit regularly, once you’ve got a small complete change, e.g. a working draft of a function, a bug fix, a draft of a README.\n\nIt is easier to review/revert changes if they relate to a single file or common issue\n\nIdeally, make a commit everytime you make a substantial, coherent set of changes.\nAt least make a commit every time you take a break, especially when leaving at the end of your working session\nPush often enough that GitHub is a useful backup"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#learning-more",
    "href": "slides/02-advanced/01-git/index.html#learning-more",
    "title": "Open code, git and GitHub",
    "section": "Learning more",
    "text": "Learning more\n\nHappy Git and GitHub for the useR by Jenny Bryan\nhttp://happygitwithr.com\nGitHub for supporting, reusing, contributing and failing safely by Allison Horst and Julie Lowndes\nhttps://www.openscapes.org/blog/2022/05/27/github-illustrated-series/\nVersion control: A practical introduction to Git and GitHub\nhttps://www.jvcasillas.com/github_workshop/index.html#1"
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#adding-an-existing-project-to-github",
    "href": "slides/02-advanced/01-git/index.html#adding-an-existing-project-to-github",
    "title": "Open code, git and GitHub",
    "section": "Adding an existing project to GitHub",
    "text": "Adding an existing project to GitHub\nThe simplest approach is to create a GitHub repo with just a README as before, create the corresponding RStudio project, copy your files into the new directory, stage and commit them.\nIf you are already using git and want to move the project to GitHub, see Adding a local repository to GitHub using git. Once the project is on GitHub you can clone it into an RStudio project."
  },
  {
    "objectID": "slides/02-advanced/01-git/index.html#some-other-tools",
    "href": "slides/02-advanced/01-git/index.html#some-other-tools",
    "title": "Open code, git and GitHub",
    "section": "Some other tools",
    "text": "Some other tools\n\ngert R package has functions for interacting with git\nIt can be worth using dedicated software for interacting with git/GitHub\n\nGitHub desktop\nGitKraken"
  }
]